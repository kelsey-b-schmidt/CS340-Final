{"version":3,"sources":["Components/Header-Footer/HeaderComponent.js","Components/Header-Footer/FooterComponent.js","Pages/Home.js","Components/Customers/CustomerRowComponent.js","Components/Customers/CustomerTableComponent.js","Components/Customers/CustomerBrowseComponent.js","Pages/Customers/Customers.js","Components/Addresses/AddressRowComponent.js","Components/Addresses/AddressTableComponent.js","Components/Addresses/AddressBrowseComponent.js","Pages/Addresses/Addresses.js","Components/Orders/OrderRowComponent.js","Components/Orders/OrderTableComponent.js","Components/Orders/OrderBrowseComponent.js","Pages/Orders/Orders.js","Components/Products/ProductRowComponent.js","Components/Products/ProductTableComponent.js","Components/Products/ProductBrowseComponent.js","Components/Products/ProductSearchComponent.js","Pages/Products/Products.js","Pages/Products/ProductsAdd.js","Pages/Products/ProductsUpdate.js","Components/Customers/CustomerIDDynamicSelectAddOptionComponent.js","Components/Customers/CustomerIDDynamicSelectAddComponent.js","Pages/Addresses/AddressesAdd.js","Components/Addresses/HandleBooleanActiveComponent.js","Components/Addresses/HandleBooleanPrimaryComponent.js","Pages/Addresses/AddressesUpdate.js","Pages/Customers/CustomersAdd.js","Pages/Customers/CustomersUpdate.js","Components/Addresses/AddressIDDynamicSelectOptionComponent.js","Components/Addresses/AddressIDDynamicSelectAddComponent.js","Pages/Orders/OrdersAdd.js","Components/Addresses/AddressIDDynamicSelectUpdateComponent.js","Pages/Orders/OrdersUpdate.js","Components/OrderDetails/OrderDetailsRowComponent.js","Components/OrderDetails/OrderDetailsTableComponent.js","Components/OrderDetails/OrderDetailsBrowseComponent.js","Pages/OrderDetails/OrderDetails.js","Components/Orders/OrderIDDynamicSelectAddOptionComponent.js","Components/Orders/OrderIDDynamicSelectAddComponent.js","Components/Products/ProductIDDynamicSelectAddOptionComponent.js","Components/Products/ProductIDDynamicSelectAddComponent.js","Pages/OrderDetails/OrderDetailsAdd.js","Pages/OrderDetails/OrderDetailsUpdate.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderComponent","react_default","a","createElement","class","react_router_dom","to","FooterComponent","Home","CustomerRowComponent","_ref","customer","setCustomerToEdit","navigate","useNavigate","customerID","customerName","email","phoneNumber","type","value","onClick","deleteCustomer","_ref2","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","newCustomerValues","response","wrap","_context","prev","next","action","fetch","method","body","JSON","stringify","headers","Content-Type","sent","json","request_received","alert","window","location","reload","stop","apply","this","arguments","confirm","catch","error","CustomerTableComponent","customers","colSpan","map","i","key","CustomerBrowseComponent","Customers","setCustomers","useEffect","Customers_regeneratorRuntime","responseJson","getCustomers","console","AddressRowComponent","address","setAddressToEdit","addressID","handleBoolean","input","disabled","checked","recipient","street","city","state","zip","isPrimary","isActive","deleteAddress","AddressRowComponent_regeneratorRuntime","newAddressValues","AddressTableComponent","addresses","AddressBrowseComponent","Addresses","setAddresses","Addresses_regeneratorRuntime","getAddresses","OrderRowComponent","order","setOrderToEdit","orderID","onUpdate","markShipped","markOrderShipped","OrderRowComponent_regeneratorRuntime","newDate","shipDateTime","newOrderValues","Date","getFullYear","getMonth","toString","padStart","getDate","join","getHours","getMinutes","getSeconds","onDelete","deleteOrders","_ref3","_callee2","_context2","updateAddressButton","shipButton","deleteButton","OrderTableComponent","orders","OrderBrowseComponent","Orders","setOrders","Orders_regeneratorRuntime","getOrders","ProductRowComponent","product","setProductToEdit","productID","productName","description","brand","weightVal","weightUnit","sellPrice","replenishCost","numberInStock","deleteProduct","ProductRowComponent_regeneratorRuntime","newProductValues","ProductTableComponent","products","ProductBrowseComponent","ProductSearchComponent","setProducts","_useState","useState","_useState2","slicedToArray","query","setQuery","id","placeholder","onChange","e","target","ProductSearchComponent_regeneratorRuntime","searchProductValues","newProductSearch","Products","Products_regeneratorRuntime","getProducts","ProductsAdd","setProductName","_useState3","_useState4","setDescription","_useState5","_useState6","setBrand","_useState7","_useState8","setWeightVal","_useState9","_useState10","setWeightUnit","_useState11","_useState12","setSellPrice","_useState13","_useState14","setReplenishCost","_useState15","_useState16","setNumberInStock","maxLength","title","step","min","max","selected","hidden","newProduct","ProductsAdd_regeneratorRuntime","ProductsUpdate","productToEdit","productNameUpdate","setProductNameUpdate","descriptionUpdate","setDescriptionUpdate","brandUpdate","setBrandUpdate","weightValUpdate","setWeightValUpdate","weightUnitUpdate","setWeightUnitUpdate","sellPriceUpdate","setSellPriceUpdate","replenishCostUpdate","setReplenishCostUpdate","numberInStockUpdate","setNumberInStockUpdate","ProductsUpdate_regeneratorRuntime","CustomerIDDynamicSelectAddOptionComponent","CustomerIDDynamicSelectAddComponent","setCustomerID","AddressesAdd","AddressesAdd_regeneratorRuntime","setRecipient","setStreet","setCity","setState","setZip","setIsActive","setIsPrimary","replace","length","newAddress","HandleBooleanActiveComponent","isActiveUpdate","setIsActiveUpdate","handleActiveChange","HandleBooleanPrimaryComponent","isPrimaryUpdate","setIsPrimaryUpdate","handlePrimaryChange","AddressesUpdate","addressToEdit","recipientUpdate","setRecipientUpdate","streetUpdate","setStreetUpdate","cityUpdate","setCityUpdate","stateUpdate","setStateUpdate","zipUpdate","setZipUpdate","AddressesUpdate_regeneratorRuntime","CustomersAdd","setCustomerName","setEmail","setPhoneNumber","includes","newCustomer","CustomersAdd_regeneratorRuntime","CustomersUpdate","customerToEdit","customerNameUpdate","setCustomerNameUpdate","emailUpdate","setEmailUpdate","phoneNumberUpdate","setPhoneNumberUpdate","CustomersUpdate_regeneratorRuntime","AddressIDDynamicSelectOptionComponent","AddressIDDynamicSelectAddComponent","setAddressID","OrdersAdd","OrdersAdd_regeneratorRuntime","searchAddressValues","newAddressSearch","newOrder","_ref4","_callee3","_context3","AddressIDDynamicSelectUpdateComponent","addressIDUpdate","setAddressIDUpdate","OrdersUpdate","orderToEdit","OrdersUpdate_regeneratorRuntime","OrderDetailsRowComponent","orderDetails","setOrderDetailToEdit","odID","productQuantity","unitPrice","lineTotal","deleteOrderDetails","OrderDetailsRowComponent_regeneratorRuntime","newOrderDetailValues","OrderDetailsTableComponent","OrderDetailsBrowseComponent","setOrderDetails","OrderDetailsBrowseComponent_regeneratorRuntime","getResponse","OrderDetails","OrderDetails_regeneratorRuntime","OrderIDDynamicSelectAddOptionComponent","OrderIDDynamicSelectAddComponent","setOrderID","ProductIDDynamicSelectAddOptionComponent","ProductIDDynamicSelectAddComponent","setProductID","OrderDetailsAdd","setProductQuantity","setUnitPrice","OrderDetailsAdd_regeneratorRuntime","newOrderDetail","orderDetailToEdit","productQuantityUpdate","setProductQuantityUpdate","unitPriceUpdate","setUnitPriceUpdate","OrderDetailsUpdate_regeneratorRuntime","App","_useState17","_useState18","_useState19","_useState20","react_router","path","element","OrderDetailsUpdate_OrderDetails","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.32697dfa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function HeaderComponent () {\r\n\r\n    return (\r\n        <div>\r\n            <h1>CoffeeBuzz Database System</h1>\r\n            <ul class=\"navigation\">\r\n                <li><Link to=\"/\">Home</Link></li>\r\n                <li><Link to=\"/Customers\">Customers</Link></li>\r\n                <li><Link to=\"/Addresses\">Addresses</Link></li>\r\n                <li><Link to=\"/Orders\">Orders</Link></li>\r\n                <li><Link to=\"/OrderDetails\">Order Details</Link></li>\r\n                <li><Link to=\"/Products\">Products</Link></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function FooterComponent (){\r\n    return (\r\n        <footer>\r\n            Copyright 2022 – Kelsey Schmidt and Andy Chen – CS340 Final Project\r\n        </footer>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Home() {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Home</h2>\r\n            <h3>Welcome to the CoffeeBuzz Database System</h3>\r\n            <p>Please use the links above to view, create, edit, or delete entries from the corresponding databases.</p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function CustomerRowComponent(\r\n    { customer, setCustomerToEdit }) {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const customerID = customer.customerID\r\n\r\n    const onUpdate = () => {\r\n        setCustomerToEdit(customer)\r\n        navigate(\"/CustomersUpdate\")\r\n    }\r\n\r\n    const onDelete = () => {\r\n        const deleteCustomer = async () => {\r\n            const action = \"Delete\"\r\n\r\n            const newCustomerValues = {\r\n                action, customerID\r\n            }\r\n            const response = await fetch('/api/Customers', {\r\n                method: 'POST',\r\n                body: JSON.stringify(newCustomerValues),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            const responseJson = await response.json()\r\n            if (responseJson.request_received === \"success\") {\r\n                alert(\"Successfully deleted the Customer!\\nThe page will now refresh.\")\r\n                window.location.reload(false)\r\n            }\r\n        }\r\n        const answer = window.confirm(\"This will delete the selected Customer.\\nDo you wish to proceed?\")\r\n        if (answer) {\r\n            deleteCustomer()\r\n                .catch(error => {\r\n                    alert('Failed to delete Customer, please check the input and try again!')\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{customer.customerID}</td>\r\n            <td>{customer.customerName}</td>\r\n            <td>{customer.email}</td>\r\n            <td>{customer.phoneNumber}</td>\r\n            <td>\r\n                <input type=\"button\" value=\"Update\" onClick={onUpdate} />\r\n            </td>\r\n            <td>\r\n            <input type=\"button\" value=\"Delete\"\r\n                       onClick={onDelete}/>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport CustomerRowComponent from \"./CustomerRowComponent\";\r\n\r\nexport default function CustomerTableComponent(\r\n    {customers, setCustomerToEdit}) {\r\n    return (\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>Customer ID</th>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Phone Number</th>\r\n                <th colSpan=\"2\">Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {customers.map((customer, i) =>\r\n                    <CustomerRowComponent\r\n                        customer={customer}\r\n                        key={i}\r\n                        setCustomerToEdit={setCustomerToEdit}\r\n                    />)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport CustomerTableComponent from \"./CustomerTableComponent\";\r\n\r\nexport default function CustomerBrowseComponent({customers, setCustomerToEdit}) {\r\n\r\n    return (\r\n        <fieldset>\r\n            <legend><strong>Browse Customers</strong></legend>\r\n            <CustomerTableComponent\r\n                customers={customers}\r\n                setCustomerToEdit={setCustomerToEdit}\r\n            />\r\n        </fieldset>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomerBrowseComponent from \"../../Components/Customers/CustomerBrowseComponent\";\r\nimport {useEffect} from \"react\";\r\n//import CustomerSearchComponent from \"../Components/CustomerSearchComponent\";\r\n\r\nexport default function Customers({ customers, setCustomers, setCustomerToEdit }) {\r\n\r\n    useEffect(() => {\r\n        const getCustomers = async() => {\r\n            const response = await fetch(\"/api/Customers\")\r\n            const responseJson = await response.json()\r\n            setCustomers(responseJson)\r\n        }\r\n        getCustomers()\r\n            .catch(console.error)\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h2>Customers</h2>\r\n            <Link to='/CustomersAdd'><button>Add a new Customer</button></Link>\r\n            <br />\r\n            <br />\r\n            <CustomerBrowseComponent\r\n                customers={customers}\r\n                setCustomerToEdit={setCustomerToEdit}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n//<CustomerSearchComponent/>","import React from 'react'\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nexport default function AddressRowComponent(\r\n    {address, setAddressToEdit}) {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const addressID = address.addressID\r\n\r\n    const onUpdate = () => {\r\n        setAddressToEdit(address)\r\n        navigate(\"/AddressesUpdate\")\r\n    }\r\n\r\n    const onDelete = () => {\r\n        const deleteAddress = async () => {\r\n            const action = \"Delete\"\r\n\r\n            const newAddressValues = {\r\n                action, addressID\r\n            }\r\n            const response = await fetch('/api/Addresses', {\r\n                method: 'POST',\r\n                body: JSON.stringify(newAddressValues),\r\n                headers: {'Content-Type': 'application/json'},\r\n            })\r\n            const responseJson = await response.json()\r\n            if (responseJson.request_received === \"success\") {\r\n                alert(\"Successfully deleted the Address!\\nThe page will now reload.\")\r\n                window.location.reload(false)\r\n            }\r\n        }\r\n        const answer = window.confirm(\"This will delete the selected Address.\\nDo you wish to proceed?\")\r\n        if (answer) {\r\n            deleteAddress()\r\n                .catch(error => {\r\n                    alert('This Address is in use with an Order and cannot be deleted.')\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleBoolean = (input) => {\r\n        if(input === 0) {\r\n            return <input type=\"checkbox\" disabled/>\r\n        }\r\n        else if (input === 1) {\r\n            return <input type=\"checkbox\" checked disabled/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{address.addressID}</td>\r\n            <td>{address.customerID}</td>\r\n            <td>{address.recipient}</td>\r\n            <td>{address.street}</td>\r\n            <td>{address.city}</td>\r\n            <td>{address.state}</td>\r\n            <td>{address.zip}</td>\r\n            <td>{handleBoolean(address.isPrimary)}</td>\r\n            <td>{handleBoolean(address.isActive)}</td>\r\n            <td>\r\n                <input type=\"button\" value=\"Update\" onClick={onUpdate}/>\r\n            </td>\r\n            <td>\r\n                <input type=\"button\" value=\"Delete\"\r\n                       onClick={onDelete}\r\n                />\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport AddressRowComponent from \"./AddressRowComponent\";\r\n\r\nexport default function AddressTableComponent(\r\n    { addresses, setAddressToEdit }) {\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Address ID</th>\r\n                    <th>Customer ID</th>\r\n                    <th>Recipient</th>\r\n                    <th colSpan=\"4\">Address</th>\r\n                    <th>Primary</th>\r\n                    <th>Active</th>\r\n                    <th colSpan=\"2\">Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {addresses.map((address, i) =>\r\n                    <AddressRowComponent\r\n                        address={address}\r\n                        key={i}\r\n                        setAddressToEdit={setAddressToEdit}\r\n                    />)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport AddressTableComponent from \"./AddressTableComponent\";\r\n\r\nexport default function AddressBrowseComponent({ addresses, setAddressToEdit }) {\r\n\r\n    return (\r\n        <fieldset>\r\n            <legend><strong>Browse Addresses</strong></legend>\r\n            <AddressTableComponent\r\n                addresses={addresses}\r\n                setAddressToEdit={setAddressToEdit}\r\n            />\r\n        </fieldset>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport AddressBrowseComponent from \"../../Components/Addresses/AddressBrowseComponent\";\r\nimport {useEffect} from \"react\";\r\n//import AddressSearchComponent from \"../../Components/Addresses/AddressSearchComponent\";\r\n\r\nexport default function Addresses({addresses, setAddresses, setAddressToEdit }) {\r\n\r\n    useEffect(() => {\r\n        const getAddresses = async() => {\r\n            const response = await fetch(\"/api/Addresses\")\r\n            const responseJson = await response.json()\r\n            setAddresses(responseJson)\r\n        }\r\n        getAddresses()\r\n            .catch(console.error)\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h2>Addresses</h2>\r\n            <Link to=\"/AddressesAdd\"><button>Add a new Address</button></Link>\r\n            <br />\r\n            <br />\r\n            <AddressBrowseComponent\r\n                addresses={addresses}\r\n                setAddressToEdit={setAddressToEdit}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n//<AddressSearchComponent/>","import React from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function OrderRowComponent(\r\n    { order, setOrderToEdit }) {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const orderID = order.orderID\r\n    const addressID = order.addressID\r\n\r\n    const onUpdate = () => {\r\n        setOrderToEdit(order)\r\n        navigate(\"/OrdersUpdate\")\r\n    }\r\n\r\n    const markShipped = () => {\r\n        const markOrderShipped = async () => {\r\n            const action = \"Update\"\r\n            // YYYY-MM-DD hh:mm:ss\r\n            const newDate = new Date()\r\n            const shipDateTime = [newDate.getFullYear(),\r\n                (newDate.getMonth()+1).toString().padStart(2, '0'),\r\n                (newDate.getDate()).toString().padStart(2, '0')].join('-')+' '+\r\n                [(newDate.getHours()).toString().padStart(2, '0'),\r\n                (newDate.getMinutes()).toString().padStart(2, '0'),\r\n                (newDate.getSeconds()).toString().padStart(2, '0')].join(':')\r\n\r\n            const newOrderValues = {\r\n                action, addressID, shipDateTime, orderID\r\n            }\r\n            const response = await fetch('/api/Orders', {\r\n                method: 'POST',\r\n                body: JSON.stringify(newOrderValues),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            const responseJson = await response.json()\r\n            if (responseJson.request_received === \"success\") {\r\n                alert(\"Successfully marked the Order as shipped!\\nThe page will now refresh.\")\r\n                window.location.reload(false)\r\n            } else {\r\n                alert(\"Failed to mark Order shipped, please try again!\")\r\n            }\r\n        }\r\n        const answer = window.confirm(\"This will mark the selected Order as shipped.\\nDo you wish to proceed?\")\r\n        if (answer) {\r\n            markOrderShipped()\r\n                .catch(console.error)\r\n        }\r\n    }\r\n\r\n    const onDelete = () => {\r\n        const deleteOrders = async () => {\r\n            const action = \"Delete\"\r\n\r\n            const newOrderValues = {\r\n                action, orderID\r\n            }\r\n            const response = await fetch('/api/Orders', {\r\n                method: 'POST',\r\n                body: JSON.stringify(newOrderValues),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            const responseJson = await response.json()\r\n            if (responseJson.request_received === \"success\") {\r\n                alert(\"Successfully deleted the Order!\\nThe page will now refresh.\")\r\n                window.location.reload(false)\r\n            }\r\n        }\r\n        const answer = window.confirm(\"This will delete the selected Order.\\nDo you wish to proceed?\")\r\n        if (answer) {\r\n            deleteOrders()\r\n                .catch(error => {\r\n                    alert('This Order is in use with an Order Detail and cannot be deleted.')\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleDateTime = (input) => {\r\n        if (input === null) {\r\n            return \"Not shipped yet\"\r\n        }\r\n        else {\r\n            return input\r\n        }\r\n    }\r\n\r\n    const updateAddressButton = (input) => {\r\n        if (input === null) {\r\n            return <input type=\"button\" value=\"Change Address ID\" onClick={onUpdate}/>\r\n        }\r\n        else {\r\n            return <input type=\"button\" value=\"Change Address ID\" disabled/>\r\n        }\r\n    }\r\n\r\n\r\n    const shipButton = (input) => {\r\n        if (input === null) {\r\n            return <input type=\"button\" value=\"Mark Shipped\" onClick={markShipped}/>\r\n        }\r\n        else {\r\n            return <input type=\"button\" value=\"Mark Shipped\" disabled/>\r\n        }\r\n    }\r\n\r\n    const deleteButton = (input) => {\r\n        if (input === null) {\r\n            return <input type=\"button\" value=\"Delete\" onClick={onDelete}/>\r\n        }\r\n        else {\r\n            return <input type=\"button\" value=\"Delete\" disabled/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{order.orderID}</td>\r\n            <td>{order.customerID}</td>\r\n            <td>{order.addressID}</td>\r\n            <td>{handleDateTime(order.shipDateTime)}</td>\r\n            <td>{updateAddressButton(order.shipDateTime)}</td>\r\n            <td>{shipButton(order.shipDateTime)}</td>\r\n            <td>{deleteButton(order.shipDateTime)}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport OrderRowComponent from \"./OrderRowComponent\";\r\n\r\nexport default function OrderTableComponent(\r\n    { orders, setOrderToEdit }) {\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Order ID</th>\r\n                    <th>Customer ID</th>\r\n                    <th>Address ID</th>\r\n                    <th>Ship Date and Time</th>\r\n                    <th colSpan=\"3\">Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {orders.map((order, i) =>\r\n                    <OrderRowComponent\r\n                        order={order}\r\n                        key={i}\r\n                        setOrderToEdit={setOrderToEdit}\r\n                    />)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport OrderTableComponent from \"./OrderTableComponent\";\r\n\r\nexport default function OrderBrowseComponent({ orders, setOrderToEdit }) {\r\n\r\n    return (\r\n        <fieldset>\r\n            <legend><strong>Browse Orders</strong></legend>\r\n            <OrderTableComponent\r\n                orders={orders}\r\n                setOrderToEdit={setOrderToEdit}\r\n            />\r\n        </fieldset>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport OrderBrowseComponent from \"../../Components/Orders/OrderBrowseComponent\";\r\nimport {useEffect} from \"react\";\r\n//import OrderSearchComponent from \"../Components/OrderSearchComponent\";\r\n\r\nexport default function Orders({ orders, setOrders, setOrderToEdit }) {\r\n\r\n    useEffect(() => {\r\n        const getOrders = async() => {\r\n            const response = await fetch(\"/api/Orders\")\r\n            const responseJson = await response.json()\r\n            setOrders(responseJson)\r\n        }\r\n        getOrders()\r\n            .catch(console.error)\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h2>Orders</h2>\r\n            <Link to=\"/OrdersAdd\"><button>Add a new Order</button></Link>\r\n            <br />\r\n            <br />\r\n            <OrderBrowseComponent\r\n                orders={orders}\r\n                setOrderToEdit={setOrderToEdit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n//<OrderSearchComponent/>","import React from 'react'\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nexport default function ProductRowComponent(\r\n    {product, setProductToEdit}) {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const productID = product.productID\r\n\r\n    const onUpdate = () => {\r\n        setProductToEdit(product)\r\n        navigate(\"/ProductsUpdate\")\r\n    }\r\n\r\n    const onDelete = () => {\r\n        const deleteProduct = async () => {\r\n            const action = \"Delete\"\r\n\r\n            const newProductValues = {\r\n                action, productID\r\n            }\r\n            const response = await fetch('/api/Products', {\r\n                method: 'POST',\r\n                body: JSON.stringify(newProductValues),\r\n                headers: {'Content-Type': 'application/json'},\r\n            })\r\n            const responseJson = await response.json()\r\n            if (responseJson.request_received === \"success\") {\r\n                alert(\"Successfully deleted the Product!\\nThe page will now reload.\")\r\n                window.location.reload(false)\r\n            }\r\n        }\r\n        const answer = window.confirm(\"This will delete the selected Product.\\nDo you wish to proceed?\")\r\n        if (answer) {\r\n            deleteProduct()\r\n                .catch(error => {\r\n                    alert('This Product is in use with an Order Detail and cannot be deleted.')\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{product.productID}</td>\r\n            <td>{product.productName}</td>\r\n            <td>{product.description}</td>\r\n            <td>{product.brand}</td>\r\n            <td>{product.weightVal}</td>\r\n            <td>{product.weightUnit}</td>\r\n            <td>${product.sellPrice}</td>\r\n            <td>${product.replenishCost}</td>\r\n            <td>{product.numberInStock}</td>\r\n            <td>\r\n                <input type=\"button\" value=\"Update\" onClick={onUpdate}/>\r\n            </td>\r\n            <td>\r\n                <input type=\"button\" value=\"Delete\"\r\n                       onClick={onDelete}\r\n                />\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ProductRowComponent from \"./ProductRowComponent\";\r\n\r\nexport default function ProductTableComponent(\r\n    {products, setProductToEdit}) {\r\n    return (\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>Product ID</th>\r\n                <th>Product Name</th>\r\n                <th>Description</th>\r\n                <th>Brand</th>\r\n                <th colSpan=\"2\">Weight</th>\r\n                <th>Sell Price</th>\r\n                <th>Replenish Cost</th>\r\n                <th>Number in Stock</th>\r\n                <th colSpan=\"2\">Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {products.map((product, i) =>\r\n                    <ProductRowComponent\r\n                        product={product}\r\n                        key={i}\r\n                        setProductToEdit={setProductToEdit}\r\n                    />)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ProductTableComponent from \"./ProductTableComponent\";\r\n\r\nexport default function ProductBrowseComponent( {products, setProductToEdit} ) {\r\n\r\n    return (\r\n        <fieldset>\r\n            <legend><strong>Browse Products</strong></legend>\r\n            <ProductTableComponent\r\n                products={products}\r\n                setProductToEdit={setProductToEdit}\r\n            />\r\n        </fieldset>\r\n    )\r\n}","import React from 'react'\r\nimport {useState} from 'react'\r\n\r\nexport default function ProductSearchComponent ({setProducts}){\r\n\r\n    const [query, setQuery] = useState(\"\")\r\n\r\n    const handleSubmit = () => {\r\n        if (query !== \"\") {\r\n            const action = \"Searchbar\"\r\n            const newProductSearch = async () => {\r\n                const searchProductValues = {\r\n                    action,\r\n                    query\r\n                }\r\n                const response = await fetch('/api/Products', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(searchProductValues),\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                })\r\n                const responseJson = await response.json()\r\n                setProducts(responseJson)\r\n            }\r\n            newProductSearch()  // the new data has already loaded into the component\r\n                .catch(console.error)\r\n        }\r\n        else {\r\n            alert(\"Please enter at least one search term!\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                id=\"query\"\r\n                placeholder=\"Search...\"\r\n                value={query}\r\n                onChange={e => setQuery(e.target.value)}\r\n            />\r\n            <button onClick={() => setQuery(\"\")}>Reset</button>\r\n            <button onClick={handleSubmit}>Submit</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport ProductBrowseComponent from \"../../Components/Products/ProductBrowseComponent\";\r\nimport {useEffect} from \"react\";\r\nimport ProductSearchComponent from \"../../Components/Products/ProductSearchComponent\";\r\n\r\nexport default function Products({products, setProducts, setProductToEdit}) {\r\n\r\n    useEffect(() => {\r\n        const getProducts = async() => {\r\n            const response = await fetch(\"/api/Products\")\r\n            const responseJson = await response.json()\r\n            setProducts(responseJson)\r\n        }\r\n        getProducts()\r\n            .catch(console.error)\r\n    }, [])\r\n\r\n    const reloadTable = () => {\r\n        window.location.reload(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Products</h2>\r\n            <Link to=\"/ProductsAdd\"><button>Add a new Product</button></Link>\r\n            <br/>\r\n            <br/>\r\n            <button onClick={reloadTable}>Reload all Products</button>\r\n            <br/>\r\n            <br/>\r\n            <ProductSearchComponent setProducts={setProducts}/>\r\n            <br/>\r\n            <ProductBrowseComponent\r\n                products={products}\r\n                setProductToEdit={setProductToEdit}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n//<ProductSearchComponent setProducts={setProducts}/>","import React from 'react'\r\nimport {useState} from \"react\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\n\r\nexport default function ProductsAdd() {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [productName, setProductName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [weightVal, setWeightVal] = useState('')\r\n    const [weightUnit, setWeightUnit] = useState('')\r\n    const [sellPrice, setSellPrice] = useState('')\r\n    const [replenishCost, setReplenishCost] = useState('')\r\n    const [numberInStock, setNumberInStock] = useState('')\r\n\r\n    const handleReset = () => {\r\n        setProductName('')\r\n        setDescription('')\r\n        setBrand('')\r\n        setWeightVal('')\r\n        setWeightUnit('')\r\n        setSellPrice('')\r\n        setReplenishCost('')\r\n        setNumberInStock('')\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (productName === '' || description === ''|| brand === ''\r\n            || weightVal === ''|| weightUnit === ''|| sellPrice === ''\r\n            || replenishCost === ''|| numberInStock === '') {\r\n            alert(\"Error: Missing fields. Please enter all values.\")\r\n        }\r\n        else if (weightVal < 0 || sellPrice < 0 || replenishCost < 0 || numberInStock < 0) {\r\n            alert(\"Error: Numeric values cannot be less than 0. Please enter new values.\")\r\n        }\r\n        else if (weightVal > 10000 || sellPrice > 10000 || replenishCost > 10000 || numberInStock > 10000) {\r\n            alert(\"Error: Numeric values cannot be more than than 10,000. Please enter new values.\")\r\n        }\r\n        else {\r\n            const action = \"Add\"\r\n            const newProduct = async () => {\r\n                const newProductValues = {\r\n                    action,\r\n                    productName,\r\n                    description,\r\n                    brand,\r\n                    weightVal,\r\n                    weightUnit,\r\n                    sellPrice,\r\n                    replenishCost,\r\n                    numberInStock\r\n                }\r\n                const response = await fetch('/api/Products', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(newProductValues),\r\n                    headers: {'Content-Type': 'application/json'},\r\n                })\r\n                const responseJson = await response.json()\r\n                if (responseJson.request_received === \"success\") {\r\n                    alert(\"Successfully added the Product!\\nYou will now be redirected to the Products Page.\")\r\n                    navigate(\"/Products\")\r\n                }\r\n            }\r\n            const answer = window.confirm(\"This will create a new Product with the entered values.\\nDo you wish to proceed?\")\r\n            if (answer) {\r\n                newProduct()    // the new data has already loaded into the component\r\n                    .catch(error => {\r\n                        alert('Failed to add Product, please check the input and try again!')\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <fieldset class=\"form\">\r\n            <legend><strong>Add a new Product</strong></legend>\r\n            <label>Product Name:</label>\r\n                <input type=\"text\"\r\n                       id=\"productName\"\r\n                       maxLength=\"100\"\r\n                       value={productName}\r\n                       onChange={e => setProductName(e.target.value)}/>\r\n            <label>Description:</label>\r\n                <input type=\"text\"\r\n                       id=\"description\"\r\n                       maxLength=\"1000\"\r\n                       value={description}\r\n                       onChange={e => setDescription(e.target.value)}/>\r\n            <label>Brand:</label>\r\n                <input type=\"text\"\r\n                       id=\"brand\"\r\n                       maxLength=\"100\"\r\n                       value={brand}\r\n                       onChange={e => setBrand(e.target.value)}/>\r\n            <label>Weight Value:</label>\r\n                <br/>\r\n                <input type=\"number\"\r\n                       id=\"weightVal\"\r\n                       title=\"The numeric weight of an item, example: 100. The unit is selected in the next box (lbs or oz).\"\r\n                       step='0.01'\r\n                       min=\"0\"\r\n                       max=\"10000\"\r\n                       value={weightVal}\r\n                       onChange={e => setWeightVal(e.target.value)}/>\r\n                <br/>\r\n            <label>Weight Unit:</label>\r\n                <br/>\r\n                <select id=\"weightUnit\" value={weightUnit} onChange={e => setWeightUnit(e.target.value)}>\r\n                    <option value=\"\" selected disabled hidden>Select</option>\r\n                    <option value=\"lbs\">lbs</option>\r\n                    <option value=\"oz\">oz</option>\r\n                </select>\r\n                <br/>\r\n            <label>Sell Price:</label>\r\n                <br/>\r\n                <span>$ </span>\r\n                <input type=\"number\"\r\n                       id=\"sellPrice\"\r\n                       title=\"What the customer pays for the product\"\r\n                       step='0.01'\r\n                       min=\"0\"\r\n                       max=\"10000\"\r\n                       value={sellPrice}\r\n                       onChange={e => setSellPrice(e.target.value)}/>\r\n                <br/>\r\n            <label>Replenish Cost:</label>\r\n                <br/>\r\n                <span>$ </span>\r\n                <input type=\"number\"\r\n                       id=\"replenish cost\"\r\n                       title=\"How much it costs CoffeeBuzz to purchase the item from the manufacturer\"\r\n                       step='0.01'\r\n                       min=\"0\"\r\n                       max=\"10000\"\r\n                       value={replenishCost}\r\n                       onChange={e => setReplenishCost(e.target.value)}/>\r\n                <br/>\r\n            <label>Number in Stock:</label>\r\n                <input type=\"number\"\r\n                       id=\"number in stock\"\r\n                       min=\"0\"\r\n                       max=\"10000\"\r\n                       value={numberInStock}\r\n                       onChange={e => setNumberInStock(e.target.value)}/>\r\n                <br/>\r\n                <br/>\r\n            <button onClick={handleSubmit}>Submit</button>\r\n            <button onClick={handleReset}>Reset</button>\r\n            <Link to=\"/Products\"><button>Cancel</button></Link>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\n//<ProductSearchComponent/>","import React from 'react'\r\nimport {useState} from \"react\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\n\r\nexport default function ProductsUpdate({productToEdit}) {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [productNameUpdate, setProductNameUpdate] = useState(productToEdit.productName)\r\n    const [descriptionUpdate, setDescriptionUpdate] = useState(productToEdit.description)\r\n    const [brandUpdate, setBrandUpdate] = useState(productToEdit.brand)\r\n    const [weightValUpdate, setWeightValUpdate] = useState(productToEdit.weightVal)\r\n    const [weightUnitUpdate, setWeightUnitUpdate] = useState(productToEdit.weightUnit)\r\n    const [sellPriceUpdate, setSellPriceUpdate] = useState(productToEdit.sellPrice)\r\n    const [replenishCostUpdate, setReplenishCostUpdate] = useState(productToEdit.replenishCost)\r\n    const [numberInStockUpdate, setNumberInStockUpdate] = useState(productToEdit.numberInStock)\r\n\r\n    const handleReset = () => {\r\n        setProductNameUpdate(productToEdit.productName)\r\n        setDescriptionUpdate(productToEdit.description)\r\n        setBrandUpdate(productToEdit.brand)\r\n        setWeightValUpdate(productToEdit.weightVal)\r\n        setWeightUnitUpdate(productToEdit.weightUnit)\r\n        setSellPriceUpdate(productToEdit.sellPrice)\r\n        setReplenishCostUpdate(productToEdit.replenishCost)\r\n        setNumberInStockUpdate(productToEdit.numberInStock)\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (productNameUpdate === '' || descriptionUpdate === ''|| brandUpdate === ''\r\n            || weightValUpdate === ''|| weightUnitUpdate=== ''|| sellPriceUpdate === ''\r\n            || replenishCostUpdate === ''|| numberInStockUpdate === '') {\r\n            alert(\"Error: Missing fields. Please enter all values.\")\r\n        }\r\n        else if (weightValUpdate < 0 || sellPriceUpdate < 0 || replenishCostUpdate < 0 || numberInStockUpdate < 0) {\r\n            alert(\"Error: Numeric values cannot be less than 0. Please enter new values.\")\r\n        }\r\n        else if (weightValUpdate > 10000 || sellPriceUpdate > 10000 || replenishCostUpdate > 10000 || numberInStockUpdate > 10000) {\r\n            alert(\"Error: Numeric values cannot be more than than 10,000. Please enter new values.\")\r\n        }\r\n        else {\r\n            const action = \"Update\"\r\n            const productID = productToEdit.productID\r\n            const newProduct = async () => {\r\n                const newProductValues = {\r\n                    action,\r\n                    productNameUpdate,\r\n                    descriptionUpdate,\r\n                    brandUpdate,\r\n                    weightValUpdate,\r\n                    weightUnitUpdate,\r\n                    sellPriceUpdate,\r\n                    replenishCostUpdate,\r\n                    numberInStockUpdate,\r\n                    productID\r\n                }\r\n                const response = await fetch('/api/Products', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(newProductValues),\r\n                    headers: {'Content-Type': 'application/json'},\r\n                })\r\n                const responseJson = await response.json()\r\n                if (responseJson.request_received === \"success\") {\r\n                    alert(\"Successfully updated the Product!\\nYou will now be redirected to the Products Page.\")\r\n                    navigate(\"/Products\")\r\n                }\r\n            }\r\n            const answer = window.confirm(\"This will update this Product with the entered values.\\nDo you wish to proceed?\")\r\n            if (answer) {\r\n                newProduct()    // the new data has already loaded into the component\r\n                    .catch(error => {\r\n                        alert('Failed to update Product, please check the input and try again!')\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <fieldset class=\"form\">\r\n            <legend><strong>Update Product</strong></legend>\r\n            <label>Product ID:</label>\r\n                <input type=\"text\"\r\n                       id=\"productID\"\r\n                       value={productToEdit.productID} disabled/>\r\n            <label>Product Name:</label>\r\n                <input type=\"text\"\r\n                       id=\"productName\"\r\n                       maxLength=\"100\"\r\n                       value={productNameUpdate}\r\n                       onChange={e => setProductNameUpdate(e.target.value)}/>\r\n            <label>Description:</label>\r\n                <input type=\"text\"\r\n                       id=\"description\"\r\n                       maxLength=\"1000\"\r\n                       value={descriptionUpdate}\r\n                       onChange={e => setDescriptionUpdate(e.target.value)}/>\r\n            <label>Brand:</label>\r\n                <input type=\"text\"\r\n                       id=\"brand\"\r\n                       maxLength=\"100\"\r\n                       value={brandUpdate}\r\n                       onChange={e => setBrandUpdate(e.target.value)}/>\r\n            <label>Weight Value:</label>\r\n                <br/>\r\n                <input type=\"number\"\r\n                       id=\"weightVal\"\r\n                       title=\"The numeric weight of an item, example: 100. The unit is selected in the next box (lbs or oz).\"\r\n                       step='0.01'\r\n                       min=\"0\"\r\n                       max=\"10000\"\r\n                       value={weightValUpdate}\r\n                       onChange={e => setWeightValUpdate(e.target.value)}/>\r\n                <br/>\r\n            <label>Weight Unit:</label>\r\n                <br/>\r\n                <select id=\"weightUnit\" value={weightUnitUpdate} onChange={e => setWeightUnitUpdate(e.target.value)}>\r\n                    <option value={weightUnitUpdate} selected disabled hidden>{weightUnitUpdate}</option>\r\n                    <option value=\"lbs\">lbs</option>\r\n                    <option value=\"oz\">oz</option>\r\n                </select>\r\n                <br/>\r\n            <label>Sell Price:</label>\r\n                <br/>\r\n                <span>$ </span>\r\n                <input type=\"number\"\r\n                       id=\"sellPrice\"\r\n                       title=\"What the customer pays for the product\"\r\n                       step='0.01'\r\n                       min=\"0\"\r\n                       max=\"10000\"\r\n                       value={sellPriceUpdate}\r\n                       onChange={e => setSellPriceUpdate(e.target.value)}/>\r\n                <br/>\r\n            <label>Replenish Cost:</label>\r\n                <br/>\r\n                <span>$ </span>\r\n                <input type=\"number\"\r\n                       id=\"replenish cost\"\r\n                       title=\"How much it costs CoffeeBuzz to purchase the item from the manufacturer\"\r\n                       step='0.01'\r\n                       min=\"0\"\r\n                       max=\"10000\"\r\n                       value={replenishCostUpdate}\r\n                       onChange={e => setReplenishCostUpdate(e.target.value)}/>\r\n                <br/>\r\n            <label>Number in Stock:</label>\r\n                <input type=\"number\"\r\n                       id=\"number in stock\"\r\n                       min=\"0\"\r\n                       max=\"10000\"\r\n                       value={numberInStockUpdate}\r\n                       onChange={e => setNumberInStockUpdate(e.target.value)}/>\r\n                <br/>\r\n                <br/>\r\n            <button onClick={handleSubmit}>Submit</button>\r\n            <button onClick={handleReset}>Reset</button>\r\n            <Link to=\"/Products\"><button>Cancel</button></Link>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\n//<ProductSearchComponent/>","import React from 'react'\r\n\r\nexport default function CustomerIDDynamicSelectAddOptionComponent(\r\n    { customer }) {\r\n\r\n    return (\r\n    <option value={customer.customerID}>{customer.customerID} - {customer.customerName}</option>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport CustomerIDDynamicSelectAddOptionComponent from \"./CustomerIDDynamicSelectAddOptionComponent\";\r\n\r\nexport default function CustomerIDDynamicSelectAddComponent(\r\n    {customers, customerID, setCustomerID}) {\r\n\r\n    return (\r\n        <select id=\"customerID\" value={customerID} onChange={e => setCustomerID(e.target.value)}>\r\n            <option value=\"\" selected disabled hidden>Select</option>\r\n            {customers.map((customer, i) =>\r\n                <CustomerIDDynamicSelectAddOptionComponent\r\n                    customer={customer}\r\n                    key={i}\r\n                />)}\r\n        </select>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport CustomerIDDynamicSelectAddComponent from \"../../Components/Customers/CustomerIDDynamicSelectAddComponent\";\r\nimport {useEffect} from \"react\";\r\n\r\nexport default function AddressesAdd( {customers, setCustomers} ) {\r\n\r\n    useEffect(() => {       // load customers for selection\r\n        const getCustomers = async() => {\r\n            const response = await fetch(\"/api/Customers\")\r\n            const responseJson = await response.json()\r\n            setCustomers(responseJson)\r\n        }\r\n        getCustomers()\r\n            .catch(console.error)\r\n    }, [])\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [customerID, setCustomerID] = useState('')\r\n    const [recipient, setRecipient] = useState('')\r\n    const [street, setStreet] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [state, setState] = useState('')\r\n    const [zip, setZip] = useState('')\r\n    const [isActive, setIsActive] = useState(0)\r\n    const [isPrimary, setIsPrimary] = useState(0)\r\n\r\n    const handleReset = () => {\r\n        setCustomerID('')\r\n        setRecipient('')\r\n        setStreet('')\r\n        setCity('')\r\n        setState('')\r\n        setZip('')\r\n        setIsActive(0)\r\n        setIsPrimary(0)\r\n    }\r\n\r\n    const numericZip = (e) => {\r\n        const value = e.target.value.replace(/\\D/g, \"\")\r\n        setZip(value)\r\n    }\r\n\r\n    const handleActiveChange = () => {\r\n        if(isActive === 0) {\r\n            setIsActive(1)\r\n        }\r\n        else if (isActive === 1) {\r\n            setIsActive(0)\r\n        }\r\n    }\r\n\r\n    const handlePrimaryChange = () => {\r\n        if(isPrimary === 0) {\r\n            setIsPrimary(1)\r\n        }\r\n        else if (isPrimary === 1) {\r\n            setIsPrimary(0)\r\n        }\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (customerID === '' || recipient === '' || street === '' || city === ''\r\n            || state === '' || zip === '') {\r\n            alert(\"Error: Missing fields. Please enter all values.\")\r\n        }\r\n        else if (zip.length !== 5 ){\r\n            alert(\"Error: Invalid zip code. Please correct the zip value.\")\r\n        }\r\n        else {\r\n            const action = \"Add\"\r\n            const newAddress = async () => {\r\n                const newAddressValues = {\r\n                    action,\r\n                    customerID,\r\n                    recipient,\r\n                    street,\r\n                    city,\r\n                    state,\r\n                    zip,\r\n                    isActive,\r\n                    isPrimary\r\n                }\r\n                const response = await fetch('/api/Addresses', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(newAddressValues),\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                })\r\n                const responseJson = await response.json()\r\n                if (responseJson.request_received === \"success\") {\r\n                    alert(\"Successfully added the Address!\\nYou will now be redirected to the Addresses Page.\")\r\n                    navigate(\"/Addresses\")\r\n                }\r\n            }\r\n            const answer = window.confirm(\"This will create a new Address with the entered values.\\nDo you wish to proceed?\")\r\n            if (answer) {\r\n                newAddress()     // the new data has already loaded into the component\r\n                    .catch(error => {\r\n                        alert('Failed to add Address, please check the input and try again!')\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <fieldset class=\"form\">\r\n            <legend><strong>Add a new Address</strong></legend>\r\n            <label>Customer ID:</label>\r\n                <br/>\r\n                <CustomerIDDynamicSelectAddComponent\r\n                    customers={customers}\r\n                    customerID={customerID}\r\n                    setCustomerID={setCustomerID}\r\n                />\r\n                <br/>\r\n            <label>Recipient:</label>\r\n                <input type=\"text\"\r\n                    id=\"recipient\"\r\n                    title=\"Name of the recipient. Example: Shelandra Wyatt\"\r\n                    maxLength=\"100\"\r\n                    value={recipient}\r\n                    onChange={e => setRecipient(e.target.value)} />\r\n            <label>Street:</label>\r\n                <input type=\"text\"\r\n                    id=\"street\"\r\n                    title=\"The number and street name for the address. Example: 12345 Vitruvian Way\"\r\n                    maxLength=\"100\"\r\n                    value={street}\r\n                    onChange={e => setStreet(e.target.value)} />\r\n                <br />\r\n            <label>City:</label>\r\n                <br />\r\n                <input type=\"text\"\r\n                    id=\"city\"\r\n                    maxLength=\"100\"\r\n                    value={city}\r\n                    onChange={e => setCity(e.target.value)} />\r\n                <br />\r\n            <label>State:</label>\r\n                <br/>\r\n                <select id=\"state\"\r\n                        value={state} onChange={e => setState(e.target.value)}>\r\n                    <option value=\"\" selected disabled hidden>Select</option>\r\n                    <option value=\"AL\">Alabama</option>\r\n                    <option value=\"AK\">Alaska</option>\r\n                    <option value=\"AZ\">Arizona</option>\r\n                    <option value=\"AR\">Arkansas</option>\r\n                    <option value=\"AS\">American Samoa</option>\r\n                    <option value=\"CA\">California</option>\r\n                    <option value=\"CO\">Colorado</option>\r\n                    <option value=\"CT\">Connecticut</option>\r\n                    <option value=\"DE\">Delaware</option>\r\n                    <option value=\"DC\">District of Columbia</option>\r\n                    <option value=\"FL\">Florida</option>\r\n                    <option value=\"GA\">Georgia</option>\r\n                    <option value=\"GU\">Guam</option>\r\n                    <option value=\"HI\">Hawaii</option>\r\n                    <option value=\"ID\">Idaho</option>\r\n                    <option value=\"IL\">Illinois</option>\r\n                    <option value=\"IN\">Indiana</option>\r\n                    <option value=\"IA\">Iowa</option>\r\n                    <option value=\"KS\">Kansas</option>\r\n                    <option value=\"KY\">Kentucky</option>\r\n                    <option value=\"LA\">Louisiana</option>\r\n                    <option value=\"ME\">Maine</option>\r\n                    <option value=\"MD\">Maryland</option>\r\n                    <option value=\"MA\">Massachusetts</option>\r\n                    <option value=\"MI\">Michigan</option>\r\n                    <option value=\"MN\">Minnesota</option>\r\n                    <option value=\"MS\">Mississippi</option>\r\n                    <option value=\"MO\">Missouri</option>\r\n                    <option value=\"MT\">Montana</option>\r\n                    <option value=\"NE\">Nebraska</option>\r\n                    <option value=\"NV\">Nevada</option>\r\n                    <option value=\"NH\">New Hampshire</option>\r\n                    <option value=\"NJ\">New Jersey</option>\r\n                    <option value=\"NM\">New Mexico</option>\r\n                    <option value=\"NY\">New York</option>\r\n                    <option value=\"NC\">North Carolina</option>\r\n                    <option value=\"ND\">North Dakota</option>\r\n                    <option value=\"CM\">Northern Mariana Islands</option>\r\n                    <option value=\"OH\">Ohio</option>\r\n                    <option value=\"OK\">Oklahoma</option>\r\n                    <option value=\"OR\">Oregon</option>\r\n                    <option value=\"PA\">Pennsylvania</option>\r\n                    <option value=\"PR\">Puerto Rico</option>\r\n                    <option value=\"RI\">Rhode Island</option>\r\n                    <option value=\"SC\">South Carolina</option>\r\n                    <option value=\"SD\">South Dakota</option>\r\n                    <option value=\"TN\">Tennessee</option>\r\n                    <option value=\"TX\">Texas</option>\r\n                    <option value=\"TT\">Trust Territories</option>\r\n                    <option value=\"UT\">Utah</option>\r\n                    <option value=\"VT\">Vermont</option>\r\n                    <option value=\"VA\">Virginia</option>\r\n                    <option value=\"VI\">Virgin Islands</option>\r\n                    <option value=\"WA\">Washington</option>\r\n                    <option value=\"WV\">West Virginia</option>\r\n                    <option value=\"WI\">Wisconsin</option>\r\n                    <option value=\"WY\">Wyoming</option>\r\n                </select>\r\n                <br/>\r\n            <label>Zip:</label>\r\n                <br />\r\n                <input type=\"text\"\r\n                    id=\"zip\"\r\n                    title=\"Please enter 5 digit zip only. Example: 10101\"\r\n                    maxLength=\"10\"\r\n                    value={zip}\r\n                    onChange={numericZip} />\r\n                <br />\r\n            <label>isPrimary:</label>\r\n                <br />\r\n                <input type=\"checkbox\"\r\n                       id=\"isPrimary\"\r\n                       onChange={handlePrimaryChange} />\r\n                <br />\r\n            <label>isActive:</label>\r\n                <br />\r\n                <input type=\"checkbox\"\r\n                    id=\"isActive\"\r\n                    onChange={handleActiveChange} />\r\n                <br />\r\n                <br />\r\n            <button onClick={handleSubmit}>Submit</button>\r\n            <button onClick={handleReset}>Reset</button>\r\n            <Link to=\"/Addresses\"><button>Cancel</button></Link>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\n//<AddressSearchComponent/>","import React from 'react'\r\n\r\nexport default function HandleBooleanActiveComponent(\r\n    { isActiveUpdate, setIsActiveUpdate }) {\r\n\r\n    const handleActiveChange = () => {\r\n        if(isActiveUpdate === 0) {\r\n            setIsActiveUpdate(1)\r\n        }\r\n        else if (isActiveUpdate === 1) {\r\n            setIsActiveUpdate(0)\r\n        }\r\n    }\r\n\r\n    if(isActiveUpdate === 0) {\r\n        return <input type=\"checkbox\"\r\n                      id=\"isActive\"\r\n                      onChange={e => handleActiveChange(e)}/>\r\n    }\r\n    else if (isActiveUpdate ===1) {\r\n        return <input type=\"checkbox\"\r\n                      id=\"isActive\"\r\n                      checked\r\n                      onChange={e => handleActiveChange(e)} />\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function HandleBooleanPrimaryComponent(\r\n    { isPrimaryUpdate, setIsPrimaryUpdate }) {\r\n\r\n    const handlePrimaryChange = () => {\r\n        if(isPrimaryUpdate === 0) {\r\n            setIsPrimaryUpdate(1)\r\n        }\r\n        else if (isPrimaryUpdate === 1) {\r\n            setIsPrimaryUpdate(0)\r\n        }\r\n    }\r\n\r\n    if(isPrimaryUpdate === 0) {\r\n        return <input type=\"checkbox\"\r\n                      id=\"isPrimary\"\r\n                      onChange={e => handlePrimaryChange(e)}/>\r\n    }\r\n    else if (isPrimaryUpdate ===1) {\r\n        return <input type=\"checkbox\"\r\n                      id=\"isPrimary\"\r\n                      checked\r\n                      onChange={e => handlePrimaryChange(e)} />\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport HandleBooleanActiveComponent from \"../../Components/Addresses/HandleBooleanActiveComponent\";\r\nimport HandleBooleanPrimaryComponent from \"../../Components/Addresses/HandleBooleanPrimaryComponent\";\r\n\r\nexport default function AddressesUpdate({ addressToEdit }) {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [recipientUpdate, setRecipientUpdate] = useState(addressToEdit.recipient)\r\n    const [streetUpdate, setStreetUpdate] = useState(addressToEdit.street)\r\n    const [cityUpdate, setCityUpdate] = useState(addressToEdit.city)\r\n    const [stateUpdate, setStateUpdate] = useState(addressToEdit.state)\r\n    const [zipUpdate, setZipUpdate] = useState(addressToEdit.zip)\r\n    const [isActiveUpdate, setIsActiveUpdate] = useState(addressToEdit.isActive)\r\n    const [isPrimaryUpdate, setIsPrimaryUpdate] = useState(addressToEdit.isPrimary)\r\n\r\n    const handleReset = () => {\r\n        setRecipientUpdate(addressToEdit.recipient)\r\n        setStreetUpdate(addressToEdit.street)\r\n        setCityUpdate(addressToEdit.city)\r\n        setStateUpdate(addressToEdit.state)\r\n        setZipUpdate(addressToEdit.zip)\r\n        setIsActiveUpdate(addressToEdit.isActive)\r\n        setIsPrimaryUpdate(addressToEdit.isPrimary)\r\n    }\r\n\r\n    const numericZip = (e) => {\r\n        const value = e.target.value.replace(/\\D/g, \"\");\r\n        setZipUpdate(value);\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (recipientUpdate === '' || streetUpdate === '' || cityUpdate === ''\r\n            || stateUpdate === '' || zipUpdate === '') {\r\n            alert(\"Please enter values!\")\r\n        }\r\n        else if (zipUpdate.length !== 5 ){\r\n            alert(\"Error: Invalid zip code. Please correct the zip value.\")\r\n        }\r\n        else {\r\n            const action = \"Update\"\r\n            const addressID = addressToEdit.addressID\r\n            const newAddress = async () => {\r\n                const newAddressValues = {\r\n                    action,\r\n                    recipientUpdate,\r\n                    streetUpdate,\r\n                    cityUpdate,\r\n                    stateUpdate,\r\n                    zipUpdate,\r\n                    isPrimaryUpdate,\r\n                    isActiveUpdate,\r\n                    addressID\r\n                }\r\n                const response = await fetch('/api/Addresses', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(newAddressValues),\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                })\r\n                const responseJson = await response.json()\r\n                if (responseJson.request_received === \"success\") {\r\n                    alert(\"Successfully updated the Address!\\nYou will now be redirected to the Addresses Page.\")\r\n                    navigate(\"/Addresses\")\r\n                    window.location.reload() // need this to update the checkboxes, they're being difficult\r\n                }\r\n            }\r\n            const answer = window.confirm(\"This will update this Address with the entered values.\\nDo you wish to proceed?\")\r\n            if (answer) {\r\n                newAddress()     // the new data has already loaded into the component\r\n                    .catch(error => {\r\n                        alert('Failed to update Address, please check the input and try again!')\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <fieldset class=\"form\">\r\n            <legend><strong>Update Address</strong></legend>\r\n            <label>Address ID:</label>\r\n                <input type=\"text\"\r\n                    id=\"addressID\"\r\n                    value={addressToEdit.addressID} disabled />\r\n            <label>Customer ID:</label>\r\n            <input type=\"text\"\r\n                   id=\"customerID\"\r\n                   value={addressToEdit.customerID} disabled />\r\n            <label>Recipient:</label>\r\n                <input type=\"text\"\r\n                    id=\"recipient\"\r\n                    title=\"Name of the recipient. Example: Shelandra Wyatt\"\r\n                    maxLength=\"100\"\r\n                    value={recipientUpdate}\r\n                    onChange={e => setRecipientUpdate(e.target.value)} />\r\n            <label>Street:</label>\r\n                <input type=\"text\"\r\n                    id=\"street\"\r\n                    title=\"The number and street name for the address. Example: 12345 Vitruvian Way\"\r\n                    maxLength=\"100\"\r\n                    value={streetUpdate}\r\n                    onChange={e => setStreetUpdate(e.target.value)} />\r\n                <br />\r\n            <label>City:</label>\r\n                <br />\r\n                <input type=\"text\"\r\n                    id=\"city\"\r\n                    maxLength=\"100\"\r\n                    value={cityUpdate}\r\n                    onChange={e => setCityUpdate(e.target.value)} />\r\n                <br />\r\n            <label>State:</label>\r\n                <br/>\r\n                <select id=\"state\"\r\n                        value={stateUpdate}\r\n                        onChange={e => setStateUpdate(e.target.value)}>\r\n                    <option value={stateUpdate} selected disabled hidden>{stateUpdate}</option>\r\n                    <option value=\"AL\">Alabama</option>\r\n                    <option value=\"AK\">Alaska</option>\r\n                    <option value=\"AZ\">Arizona</option>\r\n                    <option value=\"AR\">Arkansas</option>\r\n                    <option value=\"AS\">American Samoa</option>\r\n                    <option value=\"CA\">California</option>\r\n                    <option value=\"CO\">Colorado</option>\r\n                    <option value=\"CT\">Connecticut</option>\r\n                    <option value=\"DE\">Delaware</option>\r\n                    <option value=\"DC\">District of Columbia</option>\r\n                    <option value=\"FL\">Florida</option>\r\n                    <option value=\"GA\">Georgia</option>\r\n                    <option value=\"GU\">Guam</option>\r\n                    <option value=\"HI\">Hawaii</option>\r\n                    <option value=\"ID\">Idaho</option>\r\n                    <option value=\"IL\">Illinois</option>\r\n                    <option value=\"IN\">Indiana</option>\r\n                    <option value=\"IA\">Iowa</option>\r\n                    <option value=\"KS\">Kansas</option>\r\n                    <option value=\"KY\">Kentucky</option>\r\n                    <option value=\"LA\">Louisiana</option>\r\n                    <option value=\"ME\">Maine</option>\r\n                    <option value=\"MD\">Maryland</option>\r\n                    <option value=\"MA\">Massachusetts</option>\r\n                    <option value=\"MI\">Michigan</option>\r\n                    <option value=\"MN\">Minnesota</option>\r\n                    <option value=\"MS\">Mississippi</option>\r\n                    <option value=\"MO\">Missouri</option>\r\n                    <option value=\"MT\">Montana</option>\r\n                    <option value=\"NE\">Nebraska</option>\r\n                    <option value=\"NV\">Nevada</option>\r\n                    <option value=\"NH\">New Hampshire</option>\r\n                    <option value=\"NJ\">New Jersey</option>\r\n                    <option value=\"NM\">New Mexico</option>\r\n                    <option value=\"NY\">New York</option>\r\n                    <option value=\"NC\">North Carolina</option>\r\n                    <option value=\"ND\">North Dakota</option>\r\n                    <option value=\"CM\">Northern Mariana Islands</option>\r\n                    <option value=\"OH\">Ohio</option>\r\n                    <option value=\"OK\">Oklahoma</option>\r\n                    <option value=\"OR\">Oregon</option>\r\n                    <option value=\"PA\">Pennsylvania</option>\r\n                    <option value=\"PR\">Puerto Rico</option>\r\n                    <option value=\"RI\">Rhode Island</option>\r\n                    <option value=\"SC\">South Carolina</option>\r\n                    <option value=\"SD\">South Dakota</option>\r\n                    <option value=\"TN\">Tennessee</option>\r\n                    <option value=\"TX\">Texas</option>\r\n                    <option value=\"TT\">Trust Territories</option>\r\n                    <option value=\"UT\">Utah</option>\r\n                    <option value=\"VT\">Vermont</option>\r\n                    <option value=\"VA\">Virginia</option>\r\n                    <option value=\"VI\">Virgin Islands</option>\r\n                    <option value=\"WA\">Washington</option>\r\n                    <option value=\"WV\">West Virginia</option>\r\n                    <option value=\"WI\">Wisconsin</option>\r\n                    <option value=\"WY\">Wyoming</option>\r\n                </select>\r\n                <br/>\r\n            <label>Zip:</label>\r\n                <br />\r\n                <input type=\"text\"\r\n                    id=\"zip\"\r\n                       title=\"Please enter 5 digit zip only. Example: 10101\"\r\n                    maxLength=\"10\"\r\n                    value={zipUpdate}\r\n                    onChange={numericZip} />\r\n                <br />\r\n            <label>Primary:</label>\r\n                <br />\r\n                <HandleBooleanPrimaryComponent\r\n                    isPrimaryUpdate={isPrimaryUpdate}\r\n                    setIsPrimaryUpdate={setIsPrimaryUpdate}\r\n                />\r\n                <br />\r\n            <label>Active:</label>\r\n                <br />\r\n                <HandleBooleanActiveComponent\r\n                    isActiveUpdate={isActiveUpdate}\r\n                    setIsActiveUpdate={setIsActiveUpdate}\r\n                />\r\n                <br />\r\n                <br />\r\n            <button onClick={handleSubmit}>Submit</button>\r\n            <button onClick={handleReset}>Reset</button>\r\n            <Link to=\"/Addresses\"><button>Cancel</button></Link>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\n//<AddressSearchComponent/>","import React from 'react'\r\nimport { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nexport default function CustomersAdd() {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [customerName, setCustomerName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phoneNumber, setPhoneNumber] = useState('')\r\n\r\n    const handleReset = () => {\r\n        setCustomerName('')\r\n        setEmail('')\r\n        setPhoneNumber('')\r\n    }\r\n\r\n    const validatePhoneNumber = (e) => {\r\n        const value = e.target.value.replace(/(\\d{3})(\\d{3})(\\d{4})/, '$1-$2-$3')\r\n        setPhoneNumber(value)\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (customerName === '' || email === '' || phoneNumber === '') {\r\n            alert(\"Error: Missing fields. Please enter all values.\")\r\n        }\r\n        else if (phoneNumber.length !== 12 ){\r\n            alert(\"Error: Invalid phone number. Please correct the phone number value.\")\r\n        }\r\n        else if (!email.includes(\"@\") || !email.includes(\".\") || email.includes(\"@.\")){\r\n            alert(\"Error: Invalid email address. Please correct the email value.\")\r\n        }\r\n        else {\r\n            const action = \"Add\"\r\n            const newCustomer = async () => {\r\n                const newCustomerValues = {\r\n                    action,\r\n                    customerName,\r\n                    email,\r\n                    phoneNumber\r\n                }\r\n                const response = await fetch('/api/Customers', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(newCustomerValues),\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                })\r\n                const responseJson = await response.json()\r\n                if (responseJson.request_received === \"success\") {\r\n                    alert(\"Successfully added the Customer!\\nYou will now be redirected to the Customers Page.\")\r\n                    navigate(\"/Customers\")\r\n                }\r\n            }\r\n            const answer = window.confirm(\"This will create a new Customer with the entered values.\\nDo you wish to proceed?\")\r\n            if (answer) {\r\n                newCustomer()    // the new data has already loaded into the component\r\n                    .catch(error => {\r\n                        alert('Failed to add Customer, please check the input and try again!')\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <fieldset class=\"form\">\r\n            <legend><strong>Add a new Customer</strong></legend>\r\n            <label>Customer Name:</label>\r\n            <input type=\"text\"\r\n                id=\"customerName\"\r\n                maxLength=\"100\"\r\n                value={customerName}\r\n                onChange={e => setCustomerName(e.target.value)} />\r\n            <br />\r\n            <label>Email:</label>\r\n            <br />\r\n            <input type=\"email\"\r\n                id=\"email\"\r\n                maxLength=\"100\"\r\n                value={email}\r\n                title='Please enter in this format: example@example.com'\r\n                onChange={e => setEmail(e.target.value)} />\r\n            <br />\r\n            <label>Phone Number:</label>\r\n            <input type=\"text\"\r\n                id=\"phoneNumber\"\r\n                value={phoneNumber}\r\n                maxLength=\"12\"\r\n                title='Please enter in this format: 123-456-1254'\r\n                onChange={validatePhoneNumber} />\r\n            <br />\r\n            <br />\r\n            <button onClick={handleSubmit}>Submit</button>\r\n            <button onClick={handleReset}>Reset</button>\r\n            <Link to=\"/Customers\"><button>Cancel</button></Link>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\n//<CustomerSearchComponent/>","import React from 'react'\r\nimport { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nexport default function CustomersUpdate({ customerToEdit }) {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [customerNameUpdate, setCustomerNameUpdate] = useState(customerToEdit.customerName)\r\n    const [emailUpdate, setEmailUpdate] = useState(customerToEdit.email)\r\n    const [phoneNumberUpdate, setPhoneNumberUpdate] = useState(customerToEdit.phoneNumber)\r\n\r\n    const handleReset = () => {\r\n        setCustomerNameUpdate(customerToEdit.customerName)\r\n        setEmailUpdate(customerToEdit.email)\r\n        setPhoneNumberUpdate(customerToEdit.phoneNumber)\r\n    }\r\n\r\n    const validatePhoneNumber = (e) => {\r\n        const value = e.target.value.replace(/(\\d{3})(\\d{3})(\\d{4})/, '$1-$2-$3')\r\n        setPhoneNumberUpdate(value)\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (customerNameUpdate === '' || emailUpdate === '' || phoneNumberUpdate === '') {\r\n            alert(\"Please enter values!\")\r\n        }\r\n        else if (phoneNumberUpdate.length !== 12 ){\r\n            alert(\"Error: Invalid phone number. Please correct the phone number value.\")\r\n        }\r\n        else if (!emailUpdate.includes(\"@\") || !emailUpdate.includes(\".\") || emailUpdate.includes(\"@.\")){\r\n            alert(\"Error: Invalid email address. Please correct the email value.\")\r\n        }\r\n        else {\r\n            const action = \"Update\"\r\n            const customerID = customerToEdit.customerID\r\n            const newCustomer = async () => {\r\n                const newCustomerValues = {\r\n                    action,\r\n                    customerNameUpdate,\r\n                    emailUpdate,\r\n                    phoneNumberUpdate,\r\n                    customerID\r\n                }\r\n                const response = await fetch('/api/Customers', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(newCustomerValues),\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                })\r\n                const responseJson = await response.json()\r\n                if (responseJson.request_received === \"success\") {\r\n                    alert(\"Successfully updated the Customer!\\nYou will now be redirected to the Customers Page.\")\r\n                    navigate(\"/Customers\")\r\n                }\r\n            }\r\n            const answer = window.confirm(\"This will update this Customer with the entered values.\\nDo you wish to proceed?\")\r\n            if (answer) {\r\n                newCustomer()\r\n                    .catch(error => {\r\n                        alert('Failed to update Customer, please check the input and try again!')\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <fieldset class=\"form\">\r\n            <legend><strong>Update Customer</strong></legend>\r\n            <label>Customer ID:</label>\r\n            <input type=\"text\"\r\n                id=\"customerID\"\r\n                value={customerToEdit.customerID} disabled />\r\n            <label>Customer Name:</label>\r\n            <input type=\"text\"\r\n                id=\"customerName\"\r\n                maxLength=\"100\"\r\n                value={customerNameUpdate}\r\n                onChange={e => setCustomerNameUpdate(e.target.value)} />\r\n            <br />\r\n            <label>Email:</label>\r\n            <br />\r\n            <input type=\"text\"\r\n                id=\"email\"\r\n                maxLength=\"100\"\r\n                value={emailUpdate}\r\n                onChange={e => setEmailUpdate(e.target.value)} />\r\n            <br />\r\n            <label>Phone Number:</label>\r\n            <input type=\"text\"\r\n                id=\"phoneNumber\"\r\n                maxLength=\"12\"\r\n                value={phoneNumberUpdate}\r\n                placeholder='123-456-1254'\r\n                onChange={validatePhoneNumber} />\r\n            <br />\r\n            <br />\r\n            <button onClick={handleSubmit}>Submit</button>\r\n            <button onClick={handleReset}>Reset</button>\r\n            <Link to=\"/Customers\"><button>Cancel</button></Link>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\n//<CustomerSearchComponent/>","import React from 'react'\r\n\r\nexport default function AddressIDDynamicSelectOptionComponent(\r\n    { address }) {\r\n\r\n    return (\r\n    <option value={address.addressID}>{address.addressID} - {address.recipient}</option>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport AddressIDDynamicSelectOptionComponent from \"./AddressIDDynamicSelectOptionComponent\";\r\n\r\nexport default function AddressIDDynamicSelectAddComponent(\r\n    {addresses, addressID, setAddressID}) {\r\n    return (\r\n        <select id=\"addressID\" value={addressID} onChange={e => setAddressID(e.target.value)}>\r\n            <option value=\"\" selected disabled hidden>Select</option>\r\n            {addresses.map((address, i) =>\r\n                <AddressIDDynamicSelectOptionComponent\r\n                    address={address}\r\n                    key={i}\r\n                />)}\r\n        </select>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport AddressIDDynamicSelectAddComponent from \"../../Components/Addresses/AddressIDDynamicSelectAddComponent\";\r\nimport CustomerIDDynamicSelectAddComponent from \"../../Components/Customers/CustomerIDDynamicSelectAddComponent\";\r\nimport {useEffect} from \"react\";\r\n\r\nexport default function OrdersAdd({addresses, setAddresses, customers, setCustomers}) {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [addressID, setAddressID] = useState('')\r\n    const [customerID, setCustomerID] = useState('')\r\n    const [shipDateTime] = useState(null)\r\n\r\n    useEffect(() => {   // load customers for selection\r\n        const getCustomers = async() => {\r\n            const response = await fetch(\"/api/Customers\")\r\n            const responseJson = await response.json()\r\n            setCustomers(responseJson)\r\n        }\r\n        getCustomers()\r\n            .catch(console.error)\r\n    }, [])\r\n\r\n    useEffect(() => {   // load addresses for selection\r\n        if (customerID !== \"\") {\r\n            const action = \"Search\"\r\n            const newAddressSearch = async () => {\r\n                const searchAddressValues = {\r\n                    action,\r\n                    customerID\r\n                }\r\n                const response = await fetch('/api/Addresses', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(searchAddressValues),\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                })\r\n                const responseJson = await response.json()\r\n                setAddresses(responseJson)\r\n            }\r\n            newAddressSearch()  // the new data has already loaded into the component\r\n                .catch(console.error)\r\n        }\r\n        else {\r\n            setAddresses([])\r\n        }\r\n\r\n    }, [customerID])\r\n\r\n\r\n    const handleReset = () => {\r\n        setCustomerID('')\r\n        setAddressID('')\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (addressID === '' || customerID === '') {\r\n            alert(\"Error: Missing fields. Please enter all values.\")\r\n        }\r\n        else {\r\n            const action = \"Add\"\r\n            const newOrder = async () => {\r\n                const newOrderValues = {\r\n                    action,\r\n                    addressID,\r\n                    customerID,\r\n                    shipDateTime\r\n                }\r\n                const response = await fetch('/api/Orders', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(newOrderValues),\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                })\r\n                const responseJson = await response.json()\r\n                if (responseJson.request_received === \"success\") {\r\n                    alert(\"Successfully added the Order!\\nYou will now be redirected to the Orders Page.\")\r\n                    navigate(\"/Orders\")\r\n                }\r\n            }\r\n            const answer = window.confirm(\"This will create a new Order with the entered values.\\nDo you wish to proceed?\")\r\n            if (answer) {\r\n                newOrder()  // the new data has already loaded into the component\r\n                    .catch(error => {\r\n                        alert('Failed to add Order, please check the input and try again!')\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <fieldset class=\"form\">\r\n            <legend><strong>Add a new Order</strong></legend>\r\n            <label>Customer ID:</label>\r\n            <br/>\r\n            <CustomerIDDynamicSelectAddComponent\r\n                customers={customers}\r\n                customerID={customerID}\r\n                setCustomerID={setCustomerID}\r\n            />\r\n            <br/>\r\n            <label>Address ID:</label>\r\n                <br/>\r\n                <AddressIDDynamicSelectAddComponent\r\n                    addresses={addresses}\r\n                    addressID={addressID}\r\n                    setAddressID={setAddressID}\r\n                />\r\n            <br />\r\n            <br />\r\n            <button onClick={handleSubmit}>Submit</button>\r\n            <button onClick={handleReset}>Reset</button>\r\n            <Link to=\"/Orders\"><button>Cancel</button></Link>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\n//<OrderSearchComponent/>","import React from 'react'\r\nimport AddressIDDynamicSelectOptionComponent from \"./AddressIDDynamicSelectOptionComponent\";\r\n\r\nexport default function AddressIDDynamicSelectUpdateComponent(\r\n    {addressIDUpdate, addresses, setAddressIDUpdate}) {\r\n    return (\r\n        <select id=\"addressID\" value={addressIDUpdate} onChange={e => setAddressIDUpdate(e.target.value)}>\r\n            <option value={addressIDUpdate} selected disabled hidden>{addressIDUpdate}</option>\r\n            {addresses.map((address, i) =>\r\n                <AddressIDDynamicSelectOptionComponent\r\n                    address={address}\r\n                    key={i}\r\n                />)}\r\n        </select>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport AddressIDDynamicSelectUpdateComponent from \"../../Components/Addresses/AddressIDDynamicSelectUpdateComponent\";\r\nimport {useEffect} from \"react\";\r\n\r\nexport default function OrdersUpdate({orderToEdit, addresses, setAddresses}) {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [addressIDUpdate, setAddressIDUpdate] = useState(orderToEdit.addressID)\r\n    const orderID = orderToEdit.orderID\r\n    const customerID = orderToEdit.customerID\r\n    const shipDateTime = orderToEdit.shipDateTime\r\n\r\n    useEffect(() => {   // load addresses for selection\r\n        const action = \"Search\"\r\n        const newAddressSearch = async () => {\r\n            const searchAddressValues = {\r\n                action,\r\n                customerID\r\n            }\r\n            const response = await fetch('/api/Addresses', {\r\n                method: 'POST',\r\n                body: JSON.stringify(searchAddressValues),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            const responseJson = await response.json()\r\n            setAddresses(responseJson)\r\n        }\r\n        newAddressSearch()  // the new data has already loaded into the component\r\n            .catch(error => {\r\n                alert('Failed to update Order, please check the input and try again!')\r\n            })\r\n\r\n    }, [customerID])\r\n\r\n\r\n    const handleReset = () => {\r\n        setAddressIDUpdate(orderToEdit.addressID)\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (addressIDUpdate === '') {\r\n            alert(\"Error: Missing fields. Please enter all values.\")\r\n        }\r\n        else {\r\n            const action = \"Update\"\r\n            const newOrder = async () => {\r\n                const newOrderValues = {\r\n                    action,\r\n                    addressIDUpdate,\r\n                    shipDateTime,\r\n                    orderID\r\n                }\r\n                const response = await fetch('/api/Orders', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(newOrderValues),\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                })\r\n                const responseJson = await response.json()\r\n                if (responseJson.request_received === \"success\") {\r\n                    alert(\"Successfully updated the Order!\\nYou will now be redirected to the Orders Page.\")\r\n                    navigate(\"/Orders\")\r\n                }\r\n            }\r\n            const answer = window.confirm(\"This will update this Order with the entered values.\\nDo you wish to proceed?\")\r\n            if (answer) {\r\n                newOrder()  // the new data has already loaded into the component\r\n                    .catch(error => {\r\n                        alert('Failed to update Order, please check the input and try again!')\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <fieldset class=\"form\">\r\n            <legend><strong>Update Order Address</strong></legend>\r\n            <label>Order ID:</label>\r\n            <br/>\r\n            <input type=\"text\"\r\n                   id=\"orderID\"\r\n                   value={orderToEdit.orderID} disabled/>\r\n            <br/>\r\n            <label>Customer ID:</label>\r\n            <br/>\r\n            <input type=\"text\"\r\n                   id=\"customerID\"\r\n                   value={orderToEdit.customerID} disabled/>\r\n            <br/>\r\n            <label>Address ID:</label>\r\n                <br/>\r\n                <AddressIDDynamicSelectUpdateComponent\r\n                    addressIDUpdate={addressIDUpdate}\r\n                    addresses={addresses}\r\n                    setAddressIDUpdate={setAddressIDUpdate}\r\n                />\r\n            <br />\r\n            <br />\r\n            <button onClick={handleSubmit}>Submit</button>\r\n            <button onClick={handleReset}>Reset</button>\r\n            <Link to=\"/Orders\"><button>Cancel</button></Link>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\n\r\n//<OrderSearchComponent/>","import React from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function OrderDetailsRowComponent(\r\n    { orderDetails, setOrderDetailToEdit }) {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const odID = orderDetails.odID\r\n\r\n    const onUpdate = () => {\r\n        setOrderDetailToEdit(orderDetails)\r\n        navigate(\"/OrderDetailsUpdate\")\r\n    }\r\n\r\n    const onDelete = () => {\r\n        const deleteOrderDetails = async () => {\r\n            const action = \"Delete\"\r\n\r\n            const newOrderDetailValues = {\r\n                action, odID\r\n            }\r\n            const response = await fetch('/api/OrderDetails', {\r\n                method: 'POST',\r\n                body: JSON.stringify(newOrderDetailValues),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            const responseJson = await response.json()\r\n            if (responseJson.request_received === \"success\") {\r\n                alert(\"Successfully deleted the OrderDetail!\\nThe page will now refresh.\")\r\n                window.location.reload(false)\r\n            }\r\n        }\r\n        const answer = window.confirm(\"This will delete the selected OrderDetail.\\nDo you wish to proceed?\")\r\n        if (answer) {\r\n            deleteOrderDetails()\r\n                .catch(error => {\r\n                    alert('Failed to delete Order Detail, please check the input and try again!')\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{orderDetails.odID}</td>\r\n            <td>{orderDetails.orderID}</td>\r\n            <td>{orderDetails.productID}</td>\r\n            <td>{orderDetails.productQuantity}</td>\r\n            <td>${orderDetails.unitPrice}</td>\r\n            <td>${orderDetails.lineTotal}</td>\r\n            <td>\r\n                <input type=\"button\" value=\"Update Order Details\" onClick={onUpdate}/>\r\n            </td>\r\n            <td>\r\n                <input type=\"button\" value=\"Delete\" onClick={onDelete}\r\n                />\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport OrderDetailsRowComponent from \"./OrderDetailsRowComponent\";\r\n\r\nexport default function OrderDetailsTableComponent(\r\n    { orderDetails, setOrderDetailToEdit }) {\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Order Detail ID</th>\r\n                    <th>Order ID</th>\r\n                    <th>Product ID</th>\r\n                    <th>Product Quantity</th>\r\n                    <th>Unit Price</th>\r\n                    <th>Line Total</th>\r\n                    <th colSpan=\"2\">Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {orderDetails.map((orderDetails, i) =>\r\n                    <OrderDetailsRowComponent\r\n                    orderDetails={orderDetails}\r\n                        key={i}\r\n                        setOrderDetailToEdit={setOrderDetailToEdit}\r\n                    />)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport OrderDetailsTableComponent from \"./OrderDetailsTableComponent\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function OrderDetailsBrowseComponent({ setOrderDetailToEdit }) {\r\n\r\n    const [orderDetails, setOrderDetails] = useState([])\r\n\r\n    useEffect(() => {\r\n        const getResponse = async () => {\r\n            const response = await fetch(\"/api/OrderDetails\")\r\n            const responseJson = await response.json()\r\n            setOrderDetails(responseJson)\r\n        }\r\n        getResponse()\r\n            .catch(console.error)\r\n    }, [])\r\n\r\n    return (\r\n        <fieldset>\r\n            <legend><strong>Browse OrderDetails</strong></legend>\r\n            <OrderDetailsTableComponent\r\n                orderDetails={orderDetails}\r\n                setOrderDetailToEdit={setOrderDetailToEdit}\r\n            />\r\n        </fieldset>\r\n    )\r\n}","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport OrderDetailsBrowseComponent from \"../../Components/OrderDetails/OrderDetailsBrowseComponent\";\r\nimport {useEffect} from \"react\";\r\n\r\nexport default function OrderDetails({orderDetails, setOrderDetails, setOrderDetailToEdit}) {\r\n\r\n    useEffect(() => {\r\n        const getOrders = async() => {\r\n            const response = await fetch(\"/api/OrderDetails\")\r\n            const responseJson = await response.json()\r\n            setOrderDetails(responseJson)\r\n        }\r\n        getOrders()\r\n            .catch(console.error)\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h2>Order Details</h2>\r\n            <Link to=\"/OrderDetailsAdd\"><button>Add Order Detail</button></Link>\r\n            <br/>\r\n            <br/>\r\n            <OrderDetailsBrowseComponent\r\n                orderDetails={orderDetails}\r\n                setOrderDetailToEdit={setOrderDetailToEdit}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function OrderIDDynamicSelectAddOptionComponent(\r\n    { order }) {\r\n\r\n    return (\r\n    <option value={order.orderID}>Order ID: {order.orderID} - Customer ID: {order.customerID} - Address ID: {order.addressID}</option>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport OrderIDDynamicSelectAddOptionComponent from \"./OrderIDDynamicSelectAddOptionComponent\";\r\n\r\nexport default function OrderIDDynamicSelectAddComponent(\r\n    {orders, orderID, setOrderID}) {\r\n\r\n    return (\r\n        <select id=\"orderID\" value={orderID} onChange={e => setOrderID(e.target.value)}>\r\n            <option value=\"\" selected disabled hidden>Select</option>\r\n            {orders.map((order, i) =>\r\n                <OrderIDDynamicSelectAddOptionComponent\r\n                    order={order}\r\n                    key={i}\r\n                />)}\r\n        </select>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ProductIDDynamicSelectAddOptionComponent(\r\n    { product }) {\r\n\r\n    return (\r\n    <option value={product.productID}>Product ID: {product.productID} - Brand: {product.brand} - Product Name: {product.productName}</option>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ProductIDDynamicSelectAddOptionComponent from \"./ProductIDDynamicSelectAddOptionComponent\";\r\n\r\nexport default function ProductIDDynamicSelectAddComponent(\r\n    {products, productID, setProductID}) {\r\n\r\n    return (\r\n        <select id=\"productID\" value={productID} onChange={e => setProductID(e.target.value)}>\r\n            <option value=\"\" selected disabled hidden>Select</option>\r\n            {products.map((product, i) =>\r\n                <ProductIDDynamicSelectAddOptionComponent\r\n                    product={product}\r\n                    key={i}\r\n                />)}\r\n        </select>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\nimport OrderIDDynamicSelectAddComponent from \"../../Components/Orders/OrderIDDynamicSelectAddComponent\";\r\nimport ProductIDDynamicSelectAddComponent from \"../../Components/Products/ProductIDDynamicSelectAddComponent\";\r\n\r\nexport default function OrderDetailsAdd({orders, setOrders, products, setProducts}) {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [orderID, setOrderID] = useState('')\r\n    const [productID, setProductID] = useState('')\r\n    const [productQuantity, setProductQuantity] = useState('')\r\n    const [unitPrice, setUnitPrice] = useState('')\r\n\r\n    useEffect(() => {   // load orders for selection\r\n        const getOrders = async() => {\r\n            const response = await fetch(\"/api/Orders\")\r\n            const responseJson = await response.json()\r\n            setOrders(responseJson)\r\n        }\r\n        getOrders()\r\n            .catch(console.error)\r\n    }, [])\r\n\r\n    useEffect(() => {   // load products for selection\r\n        const getProducts = async() => {\r\n            const response = await fetch(\"/api/Products\")\r\n            const responseJson = await response.json()\r\n            setProducts(responseJson)\r\n        }\r\n        getProducts()\r\n            .catch(console.error)\r\n    }, [])\r\n\r\n\r\n    const handleReset = () => {\r\n        setOrderID('')\r\n        setProductID('')\r\n        setProductQuantity('')\r\n        setUnitPrice('')\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (orderID === '' || productID === '' || productQuantity === ''\r\n            || unitPrice === '') {\r\n            alert(\"Error: Missing fields. Please enter all values.\")\r\n        }\r\n        else if (productQuantity < 1 || unitPrice < 0) {\r\n            alert(\"Error: Product Quantity cannot be less than 1.\" +\r\n                \"\\nUnit Price cannot be less than 0.\" +\r\n                \"\\nPlease enter new values.\")\r\n        }\r\n        else if (productQuantity > 10000 || unitPrice > 10000) {\r\n            alert(\"Error: Numeric values cannot be more than than 10,000. Please enter new values.\")\r\n        }\r\n        else {\r\n            const action = \"Add\"\r\n            const newOrderDetail = async () => {\r\n                const newOrderDetailValues = {\r\n                    action,\r\n                    orderID,\r\n                    productID,\r\n                    productQuantity,\r\n                    unitPrice\r\n                }\r\n                const response = await fetch('/api/OrderDetails', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(newOrderDetailValues),\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                })\r\n                const responseJson = await response.json()\r\n                if (responseJson.request_received === \"success\") {\r\n                    alert(\"Successfully added the Order Detail!\\nYou will now be redirected to the Order Details Page.\")\r\n                    navigate(\"/OrderDetails\")\r\n                }\r\n            }\r\n            const answer = window.confirm(\"This will create a new Order Detail with the entered values.\\nDo you wish to proceed?\")\r\n            if (answer) {\r\n                newOrderDetail()\r\n                    .catch(error => {\r\n                        alert('Failed to add Order Detail, please check the input and try again!')\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <fieldset class=\"form\">\r\n            <legend><strong>Add a new Order Detail</strong></legend>\r\n            <label>Order ID:</label>\r\n            <br/>\r\n            <OrderIDDynamicSelectAddComponent\r\n                orders={orders}\r\n                orderID={orderID}\r\n                setOrderID={setOrderID}\r\n            />\r\n            <br/>\r\n            <label>Product ID:</label>\r\n            <br/>\r\n            <ProductIDDynamicSelectAddComponent\r\n                products={products}\r\n                productID={productID}\r\n                setProductID={setProductID}\r\n            />\r\n            <br/>\r\n            <label>Product Quantity:</label>\r\n            <br/>\r\n            <input type=\"number\"\r\n                   id=\"product quantity\"\r\n                   min=\"0\"\r\n                   max=\"10000\"\r\n                   value={productQuantity}\r\n                   onChange={e => setProductQuantity(e.target.value)}/>\r\n            <br/>\r\n            <label>Unit Price:</label>\r\n            <br/>\r\n            <span>$ </span>\r\n            <input type=\"number\"\r\n                   id=\"sellPrice\"\r\n                   title=\"What the customer pays for the product\"\r\n                   step='0.01'\r\n                   min=\"0\"\r\n                   max=\"10000\"\r\n                   value={unitPrice}\r\n                   onChange={e => setUnitPrice(e.target.value)}/>\r\n            <br/>\r\n            <br />\r\n            <button onClick={handleSubmit}>Submit</button>\r\n            <button onClick={handleReset}>Reset</button>\r\n            <Link to=\"/OrderDetails\"><button>Cancel</button></Link>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nexport default function OrderDetails({ orderDetailToEdit }) {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const orderID = orderDetailToEdit.orderID\r\n    const [productQuantityUpdate, setProductQuantityUpdate] = useState(orderDetailToEdit.productQuantity)\r\n    const [unitPriceUpdate, setUnitPriceUpdate] = useState(orderDetailToEdit.unitPrice)\r\n\r\n\r\n    const handleReset = () => {\r\n        setProductQuantityUpdate(orderDetailToEdit.productQuantity)\r\n        setUnitPriceUpdate(orderDetailToEdit.unitPrice)\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (productQuantityUpdate === ''\r\n            || unitPriceUpdate === '') {\r\n            alert(\"Please enter values!\")\r\n        }\r\n        else if (productQuantityUpdate < 1 || unitPriceUpdate < 0) {\r\n            alert(\"Error: Product Quantity cannot be less than 1.\" +\r\n                \"\\nUnit Price cannot be less than 0.\" +\r\n                \"\\nPlease enter new values.\")\r\n        }\r\n        else if (productQuantityUpdate > 10000 || unitPriceUpdate > 10000) {\r\n            alert(\"Error: Numeric values cannot be more than than 10,000. Please enter new values.\")\r\n        }\r\n        else {\r\n            const action = \"Update\"\r\n            const newOrderDetail = async () => {\r\n                const newOrderDetailValues = {\r\n                    action,\r\n                    productQuantityUpdate,\r\n                    unitPriceUpdate,\r\n                    orderID\r\n                }\r\n                const response = await fetch('/api/OrderDetails', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(newOrderDetailValues),\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                })\r\n                const responseJson = await response.json()\r\n                if (responseJson.request_received === \"success\") {\r\n                    alert(\"Successfully updated the OrderDetail!\\nYou will now be redirected to the Order Details Page.\")\r\n                    navigate(\"/OrderDetails\")\r\n                }\r\n            }\r\n            const answer = window.confirm(\"This will update this OrderDetail with the entered values.\\nDo you wish to proceed?\")\r\n            if (answer) {\r\n                newOrderDetail()\r\n                    .catch(error => {\r\n                        alert('Failed to update Order Detail, please check the input and try again!')\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <fieldset class=\"form\">\r\n            <legend><strong>Update Order Details</strong></legend>\r\n            <label>Order ID:</label>\r\n            <input type=\"text\"\r\n                id=\"orderID\"\r\n                value={orderDetailToEdit.orderID} disabled />\r\n            <label>Product ID:</label>\r\n            <br/>\r\n            <input type=\"text\"\r\n                   id=\"productID\"\r\n                   value={orderDetailToEdit.productID} disabled/>\r\n            <br />\r\n            <label>Product Quantity:</label>\r\n            <br/>\r\n            <input type=\"number\"\r\n                   id=\"product quantity\"\r\n                   min=\"0\"\r\n                   max=\"10000\"\r\n                   value={productQuantityUpdate}\r\n                   onChange={e => setProductQuantityUpdate(e.target.value)}/>\r\n            <br/>\r\n            <label>Unit Price:</label>\r\n            <br/>\r\n            <span>$ </span>\r\n            <input type=\"number\"\r\n                   id=\"sellPrice\"\r\n                   title=\"What the customer pays for the product\"\r\n                   step='0.01'\r\n                   min=\"0\"\r\n                   max=\"10000\"\r\n                   value={unitPriceUpdate}\r\n                   onChange={e => setUnitPriceUpdate(e.target.value)}/>\r\n            <br />\r\n            <br />\r\n            <button onClick={handleSubmit}>Submit</button>\r\n            <button onClick={handleReset}>Reset</button>\r\n            <Link to=\"/OrderDetails\"><button>Cancel</button></Link>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport './App.css'\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport { useState} from \"react\";\r\nimport HeaderComponent from \"./Components/Header-Footer/HeaderComponent\";\r\nimport FooterComponent from \"./Components/Header-Footer/FooterComponent\";\r\nimport Home from \"./Pages/Home\";\r\nimport Customers from \"./Pages/Customers/Customers\";\r\nimport Addresses from \"./Pages/Addresses/Addresses\";\r\nimport Orders from \"./Pages/Orders/Orders\";\r\nimport Products from \"./Pages/Products/Products\";\r\nimport ProductsAdd from \"./Pages/Products/ProductsAdd\";\r\nimport ProductsUpdate from \"./Pages/Products/ProductsUpdate\";\r\nimport AddressesAdd from \"./Pages/Addresses/AddressesAdd\";\r\nimport AddressesUpdate from \"./Pages/Addresses/AddressesUpdate\";\r\nimport CustomersAdd from \"./Pages/Customers/CustomersAdd\";\r\nimport CustomersUpdate from \"./Pages/Customers/CustomersUpdate\";\r\nimport OrdersAdd from \"./Pages/Orders/OrdersAdd\";\r\nimport OrdersUpdate from \"./Pages/Orders/OrdersUpdate\";\r\nimport OrderDetails from \"./Pages/OrderDetails/OrderDetails\";\r\nimport OrderDetailsAdd from \"./Pages/OrderDetails/OrderDetailsAdd\";\r\nimport OrderDetailsUpdate from \"./Pages/OrderDetails/OrderDetailsUpdate\";\r\n\r\n\r\n\r\nexport default function App() {\r\n\r\n\tconst [productToEdit, setProductToEdit] = useState(\"\");\r\n\tconst [addressToEdit, setAddressToEdit] = useState(\"\");\r\n\tconst [customerToEdit, setCustomerToEdit] = useState(\"\");\r\n\tconst [orderToEdit, setOrderToEdit] = useState(\"\");\r\n\tconst [orderDetailToEdit, setOrderDetailToEdit] = useState(\"\");\r\n\tconst [products, setProducts] = useState([])\r\n\tconst [addresses, setAddresses] = useState([])\r\n\tconst [customers, setCustomers] = useState([])\r\n\tconst [orders, setOrders] = useState([])\r\n\tconst [orderDetails, setOrderDetails] = useState([])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<HeaderComponent />\r\n\t\t\t\t<Routes>\r\n\t\t\t\t\t<Route path=\"/\" element={<Home />} />\r\n\r\n\t\t\t\t\t<Route path=\"/Products\" element={<Products\r\n\t\t\t\t\t\tproducts={products}\r\n\t\t\t\t\t\tsetProducts={setProducts}\r\n\t\t\t\t\t\tsetProductToEdit={setProductToEdit} />} />\r\n\t\t\t\t\t<Route path=\"/ProductsAdd\" element={<ProductsAdd/>} />\r\n\t\t\t\t\t<Route path=\"/ProductsUpdate\" element={<ProductsUpdate\r\n\t\t\t\t\t\tproductToEdit={productToEdit}\r\n\t\t\t\t\t/>} />\r\n\r\n\t\t\t\t\t<Route path=\"/Addresses\" element={<Addresses\r\n\t\t\t\t\t\taddresses={addresses}\r\n\t\t\t\t\t\tsetAddresses={setAddresses}\r\n\t\t\t\t\t\tsetAddressToEdit={setAddressToEdit} />} />\r\n\t\t\t\t\t<Route path=\"/AddressesAdd\" element={<AddressesAdd\r\n\t\t\t\t\t\tcustomers={customers}\r\n\t\t\t\t\t\tsetCustomers={setCustomers}\r\n\t\t\t\t\t/>} />\r\n\t\t\t\t\t<Route path=\"/AddressesUpdate\" element={<AddressesUpdate\r\n\t\t\t\t\t\taddressToEdit={addressToEdit} />} />\r\n\r\n\t\t\t\t\t<Route path=\"/Customers\" element={<Customers\r\n\t\t\t\t\t\tcustomers={customers}\r\n\t\t\t\t\t\tsetCustomers={setCustomers}\r\n\t\t\t\t\t\tsetCustomerToEdit={setCustomerToEdit} />} />\r\n\t\t\t\t\t<Route path=\"/CustomersAdd\" element={<CustomersAdd/>} />\r\n\t\t\t\t\t<Route path=\"/CustomersUpdate\" element={<CustomersUpdate\r\n\t\t\t\t\t\tcustomerToEdit={customerToEdit} />} />\r\n\r\n\t\t\t\t\t<Route path=\"/Orders\" element={<Orders\r\n\t\t\t\t\t\torders={orders}\r\n\t\t\t\t\t\tsetOrders={setOrders}\r\n\t\t\t\t\t\tsetOrderToEdit={setOrderToEdit} />} />\r\n\t\t\t\t\t<Route path=\"/OrdersAdd\" element={<OrdersAdd\r\n\t\t\t\t\t\taddresses={addresses}\r\n\t\t\t\t\t\tsetAddresses={setAddresses}\r\n\t\t\t\t\t\tcustomers={customers}\r\n\t\t\t\t\t\tsetCustomers={setCustomers}/>} />\r\n\t\t\t\t\t<Route path=\"/OrdersUpdate\" element={<OrdersUpdate\r\n\t\t\t\t\t\torderToEdit={orderToEdit}\r\n\t\t\t\t\t\taddresses={addresses}\r\n\t\t\t\t\t\tsetAddresses={setAddresses}/>} />\r\n\r\n\r\n\r\n\t\t\t\t\t<Route path=\"/OrderDetails\" element={<OrderDetails\r\n\t\t\t\t\t\torderDetails={orderDetails}\r\n\t\t\t\t\t\tsetOrderDetails={setOrderDetails}\r\n\t\t\t\t\t\tsetOrderDetailToEdit={setOrderDetailToEdit} />} />\r\n\t\t\t\t\t<Route path=\"/OrderDetailsAdd\" element={<OrderDetailsAdd\r\n\t\t\t\t\t\torders={orders}\r\n\t\t\t\t\t\tsetOrders={setOrders}\r\n\t\t\t\t\t\tproducts={products}\r\n\t\t\t\t\t\tsetProducts={setProducts}/>} />\r\n\t\t\t\t\t<Route path=\"/OrderDetailsUpdate\" element={<OrderDetailsUpdate\r\n\t\t\t\t\t\torderDetailToEdit={orderDetailToEdit} />} />\r\n\t\t\t\t</Routes>\r\n\t\t\t\t<FooterComponent />\r\n\t\t\t</BrowserRouter>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}