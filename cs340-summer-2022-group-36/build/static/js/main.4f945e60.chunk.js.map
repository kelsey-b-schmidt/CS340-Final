{"version":3,"sources":["Components/Header-Footer/HeaderComponent.js","Pages/Home.js","Components/Customers/CustomerRowComponent.js","Components/Customers/CustomerTableComponent.js","Components/Customers/CustomerBrowseComponent.js","Pages/Customers/Customers.js","Components/Addresses/AddressRowComponent.js","Components/Addresses/AddressTableComponent.js","Components/Addresses/AddressBrowseComponent.js","Pages/Addresses/Addresses.js","Components/Orders/OrderRowComponent.js","Components/Orders/OrderTableComponent.js","Components/Orders/OrderBrowseComponent.js","Pages/Orders/Orders.js","Components/Products/ProductRowComponent.js","Components/Products/ProductTableComponent.js","Components/Products/ProductBrowseComponent.js","Pages/Products/Products.js","Pages/Products/ProductsAdd.js","Pages/Products/ProductsUpdate.js","Components/Header-Footer/FooterComponent.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderComponent","react_default","a","createElement","class","react_router_dom","to","Home","CustomerRowComponent","_ref","customer","customerID","customerName","email","phoneNumber","type","value","onClick","CustomerTableComponent","customers","colSpan","map","i","key","CustomerBrowseComponent","_useState","useState","_useState2","Object","slicedToArray","setCustomers","useEffect","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","responseJson","wrap","_context","prev","next","fetch","sent","json","stop","apply","this","arguments","getResponse","catch","console","error","Customers","AddressRowComponent","address","handleBoolean","input","disabled","checked","addressID","recipient","street","city","state","zip","isActive","isPrimary","AddressTableComponent","addresses","AddressBrowseComponent","setAddresses","AddressBrowseComponent_regeneratorRuntime","Addresses","OrderRowComponent","order","orderID","shipDateTime","OrderTableComponent","orders","OrderBrowseComponent","setOrders","OrderBrowseComponent_regeneratorRuntime","Orders","ProductRowComponent","product","productID","action","productName","description","brand","weightVal","weightUnit","sellPrice","replenishCost","numberInStock","deleteProduct","_ref2","ProductRowComponent_regeneratorRuntime","newProductValues","method","body","JSON","stringify","headers","Content-Type","request_received","alert","window","location","reload","confirm","ProductTableComponent","products","ProductBrowseComponent","setProducts","ProductBrowseComponent_regeneratorRuntime","Products","navigate","useNavigate","_useState3","_useState4","setProductName","_useState5","_useState6","setDescription","_useState7","_useState8","setBrand","_useState9","_useState10","setWeightVal","_useState11","_useState12","setWeightUnit","_useState13","_useState14","setSellPrice","_useState15","_useState16","setReplenishCost","_useState17","_useState18","setNumberInStock","id","maxLength","onChange","e","target","step","min","max","selected","hidden","newProduct","ProductsAdd_regeneratorRuntime","ProductsUpdate_regeneratorRuntime","FooterComponent","App","react_router","path","element","ProductsAdd_Products","ProductsUpdate_Products","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.4f945e60.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function HeaderComponent () {\r\n\r\n    return (\r\n        <div>\r\n            <h1>CoffeeBuzz Database System</h1>\r\n            <ul class=\"navigation\">\r\n                <li><Link to=\"/\">Home</Link></li>\r\n                <li><Link to=\"/Customers\">Customers</Link></li>\r\n                <li><Link to=\"/Addresses\">Addresses</Link></li>\r\n                <li><Link to=\"/Orders\">Orders</Link></li>\r\n                <li><Link to=\"/Products\">Products</Link></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Home() {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Home</h2>\r\n            <h3>Welcome to the CoffeeBuzz Database System</h3>\r\n            <p>Please use the links above to view, create, edit, or delete entries from the corresponding databases.</p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function CustomerRowComponent(\r\n    {customer}) {\r\n    return (\r\n        <tr>\r\n            <td>{customer.customerID}</td>\r\n            <td>{customer.customerName}</td>\r\n            <td>{customer.email}</td>\r\n            <td>{customer.phoneNumber}</td>\r\n            <td>\r\n                <input type=\"button\" value=\"Update\"/>\r\n            </td>\r\n            <td>\r\n                <input type=\"button\" value=\"Delete\"\r\n                       onClick='confirm(\"This will delete the selected customer.\\nAre you sure you want to submit?\")'\r\n                />\r\n            </td>\r\n            <td>\r\n                <input type=\"button\" value=\"See Addresses\"/>\r\n            </td>\r\n            <td>\r\n                <input type=\"button\" value=\"See Orders\"/>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport CustomerRowComponent from \"./CustomerRowComponent\";\r\n\r\nexport default function CustomerTableComponent(\r\n    {customers}) {\r\n    return (\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>Customer ID</th>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Phone Number</th>\r\n                <th colSpan=\"4\">Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {customers.map((customer, i) =>\r\n                    <CustomerRowComponent\r\n                        customer={customer}\r\n                        key={i}\r\n                    />)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport CustomerTableComponent from \"./CustomerTableComponent\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nexport default function CustomerBrowseComponent() {\r\n\r\n    const [customers, setCustomers] = useState([])\r\n\r\n    useEffect(() => {\r\n        const getResponse = async() => {\r\n            const response = await fetch(\"/api/Customers\")\r\n            const responseJson = await response.json()\r\n            setCustomers(responseJson)\r\n        }\r\n        getResponse()\r\n            .catch(console.error)\r\n    }, [])\r\n\r\n    return (\r\n        <fieldset>\r\n            <legend><strong>Browse Customers</strong></legend>\r\n            <CustomerTableComponent\r\n                customers={customers}\r\n            />\r\n        </fieldset>\r\n    )\r\n}","import React from 'react'\r\n//import {Link} from \"react-router-dom\";\r\nimport CustomerBrowseComponent from \"../../Components/Customers/CustomerBrowseComponent\";\r\n//import CustomerSearchComponent from \"../Components/CustomerSearchComponent\";\r\n\r\nexport default function Customers() {\r\n\r\n    return (\r\n        <div>\r\n            <h2>Customers</h2>\r\n            <button>Add a new Customer</button>\r\n            <br/>\r\n            <br/>\r\n            <CustomerBrowseComponent/>\r\n        </div>\r\n    )\r\n}\r\n\r\n//<CustomerSearchComponent/>\r\n// <Link to=\"/CustomersAdd\"><button>Add a new Customer</button></Link> (button with link, when finished)","import React from 'react'\r\n\r\nexport default function AddressRowComponent(\r\n    {address}) {\r\n\r\n    const handleBoolean = (input) => {\r\n        if(input === 0) {\r\n            return <input type=\"checkbox\" disabled/>\r\n        }\r\n        else if (input ===1) {\r\n            return <input type=\"checkbox\" checked disabled/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{address.addressID}</td>\r\n            <td>{address.customerID}</td>\r\n            <td>{address.recipient}</td>\r\n            <td>{address.street}</td>\r\n            <td>{address.city}</td>\r\n            <td>{address.state}</td>\r\n            <td>{address.zip}</td>\r\n            <td>{handleBoolean(address.isActive)}</td>\r\n            <td>{handleBoolean(address.isPrimary)}</td>\r\n            <td>\r\n                <input type=\"button\" value=\"Update\"/>\r\n            </td>\r\n            <td>\r\n                <input type=\"button\" value=\"Delete\"\r\n                       onClick='confirm(\"This will delete the selected address.\\nAre you sure you want to submit?\")'\r\n                />\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport AddressRowComponent from \"./AddressRowComponent\";\r\n\r\nexport default function AddressTableComponent(\r\n    {addresses}) {\r\n    return (\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>Address ID</th>\r\n                <th>Customer ID</th>\r\n                <th>Recipient</th>\r\n                <th colSpan=\"4\">Address</th>\r\n                <th>Primary</th>\r\n                <th>Active</th>\r\n                <th colSpan=\"2\">Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {addresses.map((address, i) =>\r\n                    <AddressRowComponent\r\n                        address={address}\r\n                        key={i}\r\n                    />)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useEffect, useState} from \"react\";\r\nimport AddressTableComponent from \"./AddressTableComponent\";\r\n\r\nexport default function AddressBrowseComponent() {\r\n\r\n    const [addresses, setAddresses] = useState([])\r\n\r\n    useEffect(() => {\r\n        const getResponse = async() => {\r\n            const response = await fetch(\"/api/Addresses\")\r\n            const responseJson = await response.json()\r\n            setAddresses(responseJson)\r\n        }\r\n        getResponse()\r\n            .catch(console.error)\r\n    }, [])\r\n\r\n    return (\r\n        <fieldset>\r\n            <legend><strong>Browse Addresses</strong></legend>\r\n            <AddressTableComponent\r\n                addresses={addresses}\r\n            />\r\n        </fieldset>\r\n    )\r\n}","import React from 'react'\r\n//import {Link} from \"react-router-dom\";\r\nimport AddressBrowseComponent from \"../../Components/Addresses/AddressBrowseComponent\";\r\n//import AddressSearchComponent from \"../Components/AddressSearchComponent\";\r\n\r\nexport default function Addresses() {\r\n\r\n    return (\r\n        <div>\r\n            <h2>Addresses</h2>\r\n            <button>Add a new Address</button>\r\n            <br/>\r\n            <br/>\r\n            <AddressBrowseComponent/>\r\n        </div>\r\n    )\r\n}\r\n\r\n//<AddressSearchComponent/>\r\n//<Link to=\"/AddressesAdd\"><button>Add a new Address</button></Link> (link inside button, when finished)","import React from 'react'\r\n\r\nexport default function OrderRowComponent(\r\n    {order}) {\r\n\r\n    const handleDateTime = (input) => {\r\n        if(input === null) {\r\n            return \"Not shipped yet\"\r\n        }\r\n        else {\r\n            return input\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{order.orderID}</td>\r\n            <td>{order.customerID}</td>\r\n            <td>{order.addressID}</td>\r\n            <td>{handleDateTime(order.shipDateTime)}</td>\r\n            <td>\r\n                <input type=\"button\" value=\"See Order Details\"/>\r\n            </td>\r\n            <td>\r\n                <input type=\"button\" value=\"Update Address\"/>\r\n            </td>\r\n            <td>\r\n                <input type=\"button\" value=\"Mark Shipped\"/>\r\n            </td>\r\n            <td>\r\n                <input type=\"button\" value=\"Delete\"\r\n                       onClick='confirm(\"This will delete the selected order.\\nAre you sure you want to submit?\")'\r\n                />\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport OrderRowComponent from \"./OrderRowComponent\";\r\n\r\nexport default function OrderTableComponent(\r\n    {orders}) {\r\n    return (\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>Order ID</th>\r\n                <th>Address ID</th>\r\n                <th>Customer ID</th>\r\n                <th>Ship Date and TIme</th>\r\n                <th colSpan=\"4\">Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {orders.map((order, i) =>\r\n                    <OrderRowComponent\r\n                        order={order}\r\n                        key={i}\r\n                    />)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport OrderTableComponent from \"./OrderTableComponent\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nexport default function OrderBrowseComponent() {\r\n\r\n    const [orders, setOrders] = useState([])\r\n\r\n    useEffect(() => {\r\n        const getResponse = async() => {\r\n            const response = await fetch(\"/api/Orders\")\r\n            const responseJson = await response.json()\r\n            setOrders(responseJson)\r\n        }\r\n        getResponse()\r\n            .catch(console.error)\r\n    }, [])\r\n\r\n    return (\r\n        <fieldset>\r\n            <legend><strong>Browse Orders</strong></legend>\r\n            <OrderTableComponent\r\n                orders={orders}\r\n            />\r\n        </fieldset>\r\n    )\r\n}","import React from 'react'\r\n//import {Link} from \"react-router-dom\";\r\nimport OrderBrowseComponent from \"../../Components/Orders/OrderBrowseComponent\";\r\n//import OrderSearchComponent from \"../Components/OrderSearchComponent\";\r\n\r\nexport default function Orders() {\r\n\r\n    return (\r\n        <div>\r\n            <h2>Orders</h2>\r\n            <button>Add a new Order</button>\r\n            <br/>\r\n            <br/>\r\n            <OrderBrowseComponent/>\r\n        </div>\r\n    )\r\n}\r\n\r\n//<OrderSearchComponent/>\r\n//<Link to=\"/OrdersAdd\"><button>Add a new Order</button></Link> (link in button, when finished)","import React from 'react'\r\nimport {useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nexport default function ProductRowComponent(\r\n    {product}) {\r\n\r\n    const productID = product.productID\r\n\r\n    const [action, setAction] = useState(\"Delete\")\r\n\r\n    const handleSubmit = () => {\r\n        const deleteProduct = async () => {\r\n            const newProductValues = {\r\n                action, productID\r\n            }\r\n            const response = await fetch('/api/Products', {\r\n                method: 'POST',\r\n                body: JSON.stringify(newProductValues),\r\n                headers: {'Content-Type': 'application/json'},\r\n            })\r\n            const responseJson = await response.json()\r\n            if (responseJson.request_received === \"success\") {\r\n                alert(\"Successfully deleted the Product!\\nThe page will now refresh.\")\r\n                window.location.reload()\r\n            } else {\r\n                alert(\"Failed to delete Product, please try again!\")\r\n            }\r\n        }\r\n        const answer = window.confirm(\"This will delete the selected Product.\\nDo you wish to proceed?\")\r\n        if (answer) {\r\n            deleteProduct()\r\n                .catch(console.error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{product.productID}</td>\r\n            <td>{product.productName}</td>\r\n            <td>{product.description}</td>\r\n            <td>{product.brand}</td>\r\n            <td>{product.weightVal}</td>\r\n            <td>{product.weightUnit}</td>\r\n            <td>${product.sellPrice}</td>\r\n            <td>${product.replenishCost}</td>\r\n            <td>{product.numberInStock}</td>\r\n            <td>\r\n                <input type=\"button\" value=\"Update\" onClick=\"navigate(/ProductsUpdate)\"/>\r\n            </td>\r\n            <td>\r\n                <input type=\"button\" value=\"Delete\"\r\n                       onClick={handleSubmit}\r\n                />\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ProductRowComponent from \"./ProductRowComponent\";\r\n\r\nexport default function ProductTableComponent(\r\n    {products}) {\r\n    return (\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>Product ID</th>\r\n                <th>Product Name</th>\r\n                <th>Description</th>\r\n                <th>Brand</th>\r\n                <th colSpan=\"2\">Weight</th>\r\n                <th>Sell Price</th>\r\n                <th>Replenish Cost</th>\r\n                <th>Number in Stock</th>\r\n                <th colSpan=\"2\">Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {products.map((product, i) =>\r\n                    <ProductRowComponent\r\n                        product={product}\r\n\r\n                        key={i}\r\n                    />)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ProductTableComponent from \"./ProductTableComponent\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nexport default function ProductBrowseComponent() {\r\n\r\n    const [products, setProducts] = useState([])\r\n\r\n    useEffect(() => {\r\n        const getResponse = async() => {\r\n            const response = await fetch(\"/api/Products\")\r\n            const responseJson = await response.json()\r\n            setProducts(responseJson)\r\n        }\r\n        getResponse()\r\n            .catch(console.error)\r\n    }, [])\r\n\r\n    return (\r\n        <fieldset>\r\n            <legend><strong>Browse Products</strong></legend>\r\n            <ProductTableComponent\r\n                products={products}\r\n            />\r\n        </fieldset>\r\n    )\r\n}","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport ProductBrowseComponent from \"../../Components/Products/ProductBrowseComponent\";\r\n//import ProductSearchComponent from \"../Components/ProductSearchComponent\";\r\n\r\nexport default function Products() {\r\n\r\n    return (\r\n        <div>\r\n            <h2>Products</h2>\r\n            <Link to=\"/ProductsAdd\"><button>Add a new Product</button></Link>\r\n            <br/>\r\n            <br/>\r\n            <ProductBrowseComponent />\r\n        </div>\r\n    )\r\n}\r\n\r\n//<ProductSearchComponent/>","import React from 'react'\r\nimport {useState} from \"react\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\n\r\nexport default function Products() {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [action, setAction] = useState(\"Add\")\r\n    const [productName, setProductName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [weightVal, setWeightVal] = useState('')\r\n    const [weightUnit, setWeightUnit] = useState('')\r\n    const [sellPrice, setSellPrice] = useState('')\r\n    const [replenishCost, setReplenishCost] = useState('')\r\n    const [numberInStock, setNumberInStock] = useState('')\r\n\r\n    const handleReset = () => {\r\n        setProductName('')\r\n        setDescription('')\r\n        setBrand('')\r\n        setWeightVal('')\r\n        setWeightUnit('')\r\n        setSellPrice('')\r\n        setReplenishCost('')\r\n        setNumberInStock('')\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (productName === '' || description === ''|| brand === ''\r\n            || weightVal === ''|| weightUnit === ''|| sellPrice === ''\r\n            || replenishCost === ''|| numberInStock === '') {\r\n            alert(\"Please enter values!\")\r\n        }\r\n        else {\r\n            const newProduct = async () => {\r\n                const newProductValues = {\r\n                    action,\r\n                    productName,\r\n                    description,\r\n                    brand,\r\n                    weightVal,\r\n                    weightUnit,\r\n                    sellPrice,\r\n                    replenishCost,\r\n                    numberInStock\r\n                }\r\n                const response = await fetch('/api/Products', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(newProductValues),\r\n                    headers: {'Content-Type': 'application/json'},\r\n                })\r\n                const responseJson = await response.json()\r\n                if (responseJson.request_received === \"success\") {\r\n                    alert(\"Successfully added the Product!\\nYou will now be redirected to the Products Page.\")\r\n                    navigate(\"/Products\")\r\n                } else {\r\n                    alert(\"Failed to add Product, please check the input and try again!\")\r\n                }\r\n            }\r\n            const answer = window.confirm(\"This will create a new Product with the entered values.\\nDo you wish to proceed?\")\r\n            if (answer) {\r\n                newProduct()\r\n                    .catch(console.error)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <fieldset class=\"form\">\r\n            <legend><strong>Add a new Product</strong></legend>\r\n            <label>Product Name:</label>\r\n                <input type=\"text\"\r\n                       id=\"productName\"\r\n                       maxLength=\"100\"\r\n                       value={productName}\r\n                       onChange={e => setProductName(e.target.value)}/>\r\n            <label>Description:</label>\r\n                <input type=\"text\"\r\n                       id=\"description\"\r\n                       maxLength=\"1000\"\r\n                       value={description}\r\n                       onChange={e => setDescription(e.target.value)}/>\r\n            <label>Brand:</label>\r\n                <input type=\"text\"\r\n                       id=\"brand\"\r\n                       maxLength=\"100\"\r\n                       value={brand}\r\n                       onChange={e => setBrand(e.target.value)}/>\r\n\r\n\r\n            <label>Weight Value:</label>\r\n                <br/>\r\n                <input type=\"number\"\r\n                       id=\"weightVal\"\r\n                       step='0.01'\r\n                       min=\"0\"\r\n                       max=\"10000\"\r\n                       value={weightVal}\r\n                       onChange={e => setWeightVal(e.target.value)}/>\r\n                <br/>\r\n            <label>Weight Unit:</label>\r\n                <br/>\r\n                <select id=\"weightUnit\" onChange={e => setWeightUnit(e.target.value)}>\r\n                    <option value=\"none\" selected disabled hidden>Select</option>\r\n                    <option value=\"lbs\">lbs</option>\r\n                    <option value=\"oz\">oz</option>\r\n                </select>\r\n                <br/>\r\n            <label>Sell Price:</label>\r\n                <br/>\r\n                <span>$ </span>\r\n                <input type=\"number\"\r\n                       id=\"sellPrice\"\r\n                       step='0.01'\r\n                       min=\"0\"\r\n                       max=\"10000\"\r\n                       value={sellPrice}\r\n                       onChange={e => setSellPrice(e.target.value)}/>\r\n                <br/>\r\n            <label>Replenish Cost:</label>\r\n                <br/>\r\n                <span>$ </span>\r\n                <input type=\"number\"\r\n                       id=\"replenish cost\"\r\n                       step='0.01'\r\n                       min=\"0\"\r\n                       max=\"10000\"\r\n                       value={replenishCost}\r\n                       onChange={e => setReplenishCost(e.target.value)}/>\r\n                <br/>\r\n            <label>Number in Stock:</label>\r\n                <input type=\"number\"\r\n                       id=\"number in stock\"\r\n                       min=\"0\"\r\n                       max=\"10000\"\r\n                       value={numberInStock}\r\n                       onChange={e => setNumberInStock(e.target.value)}/>\r\n                <br/>\r\n                <br/>\r\n            <button onClick={handleSubmit}>Submit</button>\r\n            <button onClick={handleReset}>Reset</button>\r\n            <Link to=\"/Products\"><button>Cancel</button></Link>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\n//<ProductSearchComponent/>","import React from 'react'\r\nimport {useState} from \"react\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\n\r\nexport default function Products() {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [action, setAction] = useState(\"Add\")\r\n    const [productName, setProductName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [weightVal, setWeightVal] = useState('')\r\n    const [weightUnit, setWeightUnit] = useState('')\r\n    const [sellPrice, setSellPrice] = useState('')\r\n    const [replenishCost, setReplenishCost] = useState('')\r\n    const [numberInStock, setNumberInStock] = useState('')\r\n\r\n    const handleReset = () => {\r\n        setProductName('')\r\n        setDescription('')\r\n        setBrand('')\r\n        setWeightVal('')\r\n        setWeightUnit('')\r\n        setSellPrice('')\r\n        setReplenishCost('')\r\n        setNumberInStock('')\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (productName === '' || description === ''|| brand === ''\r\n            || weightVal === ''|| weightUnit === ''|| sellPrice === ''\r\n            || replenishCost === ''|| numberInStock === '') {\r\n            alert(\"Please enter values!\")\r\n        }\r\n        else {\r\n            const newProduct = async () => {\r\n                const newProductValues = {\r\n                    action,\r\n                    productName,\r\n                    description,\r\n                    brand,\r\n                    weightVal,\r\n                    weightUnit,\r\n                    sellPrice,\r\n                    replenishCost,\r\n                    numberInStock\r\n                }\r\n                const response = await fetch('/api/Products', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(newProductValues),\r\n                    headers: {'Content-Type': 'application/json'},\r\n                })\r\n                const responseJson = await response.json()\r\n                if (responseJson.request_received === \"success\") {\r\n                    alert(\"Successfully added the Product!\\nYou will now be redirected to the Products Page.\")\r\n                    navigate(\"/Products\")\r\n                } else {\r\n                    alert(\"Failed to add Product, please check the input and try again!\")\r\n                }\r\n            }\r\n            const answer = window.confirm(\"This will create a new Product with the entered values.\\nDo you wish to proceed?\")\r\n            if (answer) {\r\n                newProduct()\r\n                    .catch(console.error)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <fieldset class=\"form\">\r\n            <legend><strong>Update a Product</strong></legend>\r\n            <label>Product Name:</label>\r\n            <input type=\"text\"\r\n                   id=\"productName\"\r\n                   maxLength=\"100\"\r\n                   value={productName}\r\n                   onChange={e => setProductName(e.target.value)}/>\r\n            <label>Description:</label>\r\n            <input type=\"text\"\r\n                   id=\"description\"\r\n                   maxLength=\"1000\"\r\n                   value={description}\r\n                   onChange={e => setDescription(e.target.value)}/>\r\n            <label>Brand:</label>\r\n            <input type=\"text\"\r\n                   id=\"brand\"\r\n                   maxLength=\"100\"\r\n                   value={brand}\r\n                   onChange={e => setBrand(e.target.value)}/>\r\n\r\n\r\n            <label>Weight Value:</label>\r\n            <br/>\r\n            <input type=\"number\"\r\n                   id=\"weightVal\"\r\n                   step='0.01'\r\n                   min=\"0\"\r\n                   max=\"10000\"\r\n                   value={weightVal}\r\n                   onChange={e => setWeightVal(e.target.value)}/>\r\n            <br/>\r\n            <label>Weight Unit:</label>\r\n            <br/>\r\n            <select id=\"weightUnit\" onChange={e => setWeightUnit(e.target.value)}>\r\n                <option value=\"none\" selected disabled hidden>Select</option>\r\n                <option value=\"lbs\">lbs</option>\r\n                <option value=\"oz\">oz</option>\r\n            </select>\r\n            <br/>\r\n            <label>Sell Price:</label>\r\n            <br/>\r\n            <span>$ </span>\r\n            <input type=\"number\"\r\n                   id=\"sellPrice\"\r\n                   step='0.01'\r\n                   min=\"0\"\r\n                   max=\"10000\"\r\n                   value={sellPrice}\r\n                   onChange={e => setSellPrice(e.target.value)}/>\r\n            <br/>\r\n            <label>Replenish Cost:</label>\r\n            <br/>\r\n            <span>$ </span>\r\n            <input type=\"number\"\r\n                   id=\"replenish cost\"\r\n                   step='0.01'\r\n                   min=\"0\"\r\n                   max=\"10000\"\r\n                   value={replenishCost}\r\n                   onChange={e => setReplenishCost(e.target.value)}/>\r\n            <br/>\r\n            <label>Number in Stock:</label>\r\n            <input type=\"number\"\r\n                   id=\"number in stock\"\r\n                   min=\"0\"\r\n                   max=\"10000\"\r\n                   value={numberInStock}\r\n                   onChange={e => setNumberInStock(e.target.value)}/>\r\n            <br/>\r\n            <br/>\r\n            <button onClick={handleSubmit}>Submit</button>\r\n            <button onClick={handleReset}>Reset</button>\r\n            <Link to=\"/Products\"><button>Cancel</button></Link>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\n//<ProductSearchComponent/>","import React from 'react'\r\n\r\nexport default function FooterComponent (){\r\n    return (\r\n        <footer>\r\n            Copyright 2022 – Kelsey Schmidt and Andy Chen – CS340 Final Project\r\n        </footer>\r\n    )\r\n}","import React from 'react'\r\nimport './App.css'\r\nimport {BrowserRouter, Routes, Route} from \"react-router-dom\";\r\nimport HeaderComponent from \"./Components/Header-Footer/HeaderComponent\";\r\nimport Home from \"./Pages/Home\";\r\nimport Customers from \"./Pages/Customers/Customers\";\r\nimport Addresses from \"./Pages/Addresses/Addresses\";\r\nimport Orders from \"./Pages/Orders/Orders\";\r\nimport Products from \"./Pages/Products/Products\";\r\nimport ProductsAdd from \"./Pages/Products/ProductsAdd\";\r\nimport ProductsUpdate from \"./Pages/Products/ProductsUpdate\";\r\nimport FooterComponent from \"./Components/Header-Footer/FooterComponent\";\r\n\r\n\r\n\r\n\r\nexport default function App() {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<HeaderComponent/>\r\n\t\t\t\t<Routes>\r\n\t\t\t\t\t<Route path=\"/\" element={<Home/>}/>\r\n\t\t\t\t\t<Route path=\"/Customers\" element={<Customers/>}/>\r\n\t\t\t\t\t<Route path=\"/Addresses\" element={<Addresses/>}/>\r\n\t\t\t\t\t<Route path=\"/Orders\" element={<Orders/>}/>\r\n\t\t\t\t\t<Route path=\"/Products\" element={<Products/>}/>\r\n\t\t\t\t\t<Route path=\"/ProductsAdd\" element={<ProductsAdd/>}/>\r\n\t\t\t\t\t<Route path=\"/ProductsUpdate\" element={<ProductsUpdate/>}/>\r\n\t\t\t\t</Routes>\r\n\t\t\t\t<FooterComponent/>\r\n\t\t\t</BrowserRouter>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}